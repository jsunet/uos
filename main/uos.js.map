{"version":3,"sources":["uos.js"],"names":["Package","require","Client","params","secure","Error","useSSL","port","endPoint","errors","InvalidEndpointError","InvalidArgumentError","region","host","toLowerCase","protocol","transport","Http","Https","libraryComments","process","platform","arch","libraryAgent","version","accessKey","secretKey","sessionToken","userAgent","pathStyle","undefined","anonymous","regionMap","partSize","overRidePartSize","maximumPartSize","maxObjectSize","enableSHA256","s3AccelerateEndpoint","reqOptions","bucketName","objectName","_","isEmpty","indexOf","options","TypeError","pick","opts","method","headers","query","virtualHostStyle","path","accelerateEndPoint","getAccelerateEndPointIfSet","map","v","k","Object","assign","appName","appVersion","trim","size","response","err","logStream","logHeaders","forEach","redacter","RegExp","replace","write","statusCode","errJSON","JSON","stringify","stream","stdout","payload","returnResponse","cb","length","sha256sum","makeRequestStream","_makeRequest","e","getRequestOptions","date","Date","authorization","req","request","errorTransformer","transformers","getErrorTransformer","on","logHTTP","pipe","getBucketRegion","InvalidBucketNameError","extractRegion","transformer","getBucketRegionTransformer","data","window","makeRequest","name","Region","bucket","prefix","recursive","InvalidPrefixError","delimiter","keyMarker","uploadIdMarker","uploads","ended","readStream","Stream","Readable","objectMode","_read","push","shift","listIncompleteUploadsQuery","emit","result","prefixes","async","eachSeries","upload","listParts","key","uploadId","parts","reduce","acc","item","isTruncated","nextKeyMarker","nextUploadIdMarker","code","getOpts","InvalidObjectNameError","getPartialObject","offset","range","expectedStatus","querystring","metaData","callback","Buffer","calculatePartSize","chunker","BlockStream2","zeroPadding","uploader","ObjectUploader","arg1","arg2","arg3","arg4","arg5","srcObject","conditions","CopyConditions","modified","unmodified","matchETag","matchEtagExcept","matchETagExcept","getCopyObjectTransformer","marker","listQueryOpts","Delimiter","MaxKeys","IncludeVersion","queries","sort","join","getListObjectsTransformer","listOpts","objects","listObjectsQuery","nextMarker","versionIdMarker","continuationToken","maxKeys","startAfter","getListObjectsV2Transformer","listObjectsV2Query","nextContinuationToken","statOpts","lastModified","versionId","etag","removeOpts","queryParams","governanceBypass","requestOptions","objectsList","maxEntries","entry","list","listOfList","encoder","TextEncoder","deleteObjects","Quiet","value","builder","xml2js","Builder","headless","buildObject","encode","PostPolicy","getInitiateMultipartTransformer","etags","element","Part","PartNumber","part","ETag","payloadObject","CompleteMultipartUpload","getCompleteMultipartTransformer","errCode","S3Error","errMessage","listNext","listPartsQuery","concat","getListPartsTransformer","maxUploads","unshift","getListMultipartTransformer","latestUpload","initiated","getTime","multipart","validate","md5sum","simpleUploader","args","multipartUploader","partNumber","rest","suffix","events","listener","NotificationPoller","start","taggingParams","tags","putOpts","tagsList","entries","Key","Value","taggingConfig","Tagging","TagSet","Tag","renderOpts","keys","policyConfig","rootName","clientExtensions","extensions","prototype","bucketExists","getObject","putObject","copyObject","statObject","removeObject","removeObjects","toUTCString","policy","formData","InvalidDateError","expiration","toISOString","type","min","max"],"mappings":"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","sourcesContent":["import fs from 'fs'\nimport Http from 'http'\nimport Https from 'https'\nimport Stream from 'stream'\nimport BlockStream2 from 'block-stream2'\nimport Xml from 'xml'\nimport xml2js from 'xml2js'\nimport async from 'async'\nimport querystring from 'querystring'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport _ from 'lodash'\nimport { TextEncoder } from \"web-encoding\"\n\nimport {\n  extractMetadata, prependXAMZMeta, isValidPrefix, isValidEndpoint, isValidBucketName,\n  isValidPort, isValidObjectName, isAmazonEndpoint, getScope,\n  uriEscape, uriResourceEscape, isBoolean, isFunction, isNumber,\n  isString, isObject, isArray, isValidDate, pipesetup,\n  readableStream, isReadableStream, isVirtualHostStyle,\n  insertContentType, makeDateLong, promisify, getVersionId, sanitizeETag,\n  toMd5, toSha256,\n  RETENTION_MODES, RETENTION_VALIDITY_UNITS, LEGAL_HOLD_STATUS\n} from './helpers.js'\n\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js'\n\nimport ObjectUploader from './object-uploader'\n\nimport * as transformers from './transformers'\n\nimport * as errors from './errors.js'\n\nimport { getS3Endpoint } from './s3-endpoints.js'\n\nimport { NotificationConfig, NotificationPoller } from './notification'\n\nimport extensions from './extensions'\n\nvar Package = require('../../package.json')\n\nexport class Client {\n  constructor(params) {\n    if (typeof params.secure !== 'undefined') throw new Error('\"secure\" option deprecated, \"useSSL\" should be used instead')\n    // Default values if not specified.\n    if (typeof params.useSSL === 'undefined') params.useSSL = true\n    if (!params.port) params.port = 0\n    // Validate input params.\n    if (!isValidEndpoint(params.endPoint)) {\n      throw new errors.InvalidEndpointError(`Invalid endPoint : ${params.endPoint}`)\n    }\n    if (!isValidPort(params.port)) {\n      throw new errors.InvalidArgumentError(`Invalid port : ${params.port}`)\n    }\n    if (!isBoolean(params.useSSL)) {\n      throw new errors.InvalidArgumentError(`Invalid useSSL flag type : ${params.useSSL}, expected to be of type \"boolean\"`)\n    }\n\n    // Validate region only if its set.\n    if (params.region) {\n      if (!isString(params.region)) {\n        throw new errors.InvalidArgumentError(`Invalid region : ${params.region}`)\n      }\n    }\n\n    var host = params.endPoint.toLowerCase()\n    var port = params.port\n    var protocol = ''\n    var transport\n    // Validate if configuration is not using SSL\n    // for constructing relevant endpoints.\n    if (params.useSSL === false) {\n      transport = Http\n      protocol = 'http:'\n      if (port === 0) {\n        port = 80\n      }\n    } else {\n      // Defaults to secure.\n      transport = Https\n      protocol = 'https:'\n      if (port === 0) {\n        port = 443\n      }\n    }\n\n    // if custom transport is set, use it.\n    if (params.transport) {\n      if (!isObject(params.transport)) {\n        throw new errors.InvalidArgumentError('Invalid transport type : ${params.transport}, expected to be type \"object\"')\n      }\n      transport = params.transport\n    }\n\n    // User Agent should always following the below style.\n    // Please open an issue to discuss any new changes here.\n    //\n    //       UOS (OS; ARCH) LIB/VER APP/VER\n    //\n    var libraryComments = `(${process.platform}; ${process.arch})`\n    var libraryAgent = `UOS ${libraryComments} uos-js/${Package.version}`\n    // User agent block ends.\n\n    this.transport = transport\n    this.host = host\n    this.port = port\n    this.protocol = protocol\n    this.accessKey = params.accessKey\n    this.secretKey = params.secretKey\n    this.sessionToken = params.sessionToken\n    this.userAgent = `${libraryAgent}`\n\n    // Default path style is true\n    if (params.pathStyle === undefined) {\n      this.pathStyle = true\n    } else {\n      this.pathStyle = params.pathStyle\n    }\n\n    if (!this.accessKey) this.accessKey = ''\n    if (!this.secretKey) this.secretKey = ''\n    this.anonymous = !this.accessKey || !this.secretKey\n\n    this.regionMap = {}\n    if (params.region) {\n      this.region = params.region\n    }\n\n    this.partSize = 64*1024*1024\n    if (params.partSize) {\n      this.partSize = params.partSize\n      this.overRidePartSize = true\n    }\n    if (this.partSize < 5*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be greater than 5MB`)\n    }\n    if (this.partSize > 5*1024*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be less than 5GB`)\n    }\n\n    this.maximumPartSize = 5*1024*1024*1024\n    this.maxObjectSize = 5*1024*1024*1024*1024\n    // SHA256 is enabled only for authenticated http requests. If the request is authenticated\n    // and the connection is https we use x-amz-content-sha256=UNSIGNED-PAYLOAD\n    // header for signature calculation.\n    this.enableSHA256 = !this.anonymous && !params.useSSL\n\n    this.s3AccelerateEndpoint = ( params.s3AccelerateEndpoint || null )\n    this.reqOptions = {}\n  }\n\n  //This is s3 Specific and does not hold validity in any other Object storage.\n  getAccelerateEndPointIfSet(bucketName, objectName){\n    if (!_.isEmpty(this.s3AccelerateEndpoint)  && !_.isEmpty(bucketName)  && !_.isEmpty(objectName) ) {\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      // Disable transfer acceleration for non-compliant bucket names.\n      if (bucketName.indexOf(\".\")!== -1) {\n        throw new Error(`Transfer Acceleration is not supported for non compliant bucket:${bucketName}`)\n      }\n      // If transfer acceleration is requested set new host.\n      // For more details about enabling transfer acceleration read here.\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      return this.s3AccelerateEndpoint\n    }\n    return  false\n  }\n\n  /**\n   * @param endPoint _string_ valid S3 acceleration end point\n   */\n  setS3TransferAccelerate(endPoint){\n    this.s3AccelerateEndpoint = endPoint\n  }\n\n  // Sets the supported request options.\n  setRequestOptions(options) {\n    if (!isObject(options)) {\n      throw new TypeError('request options should be of type \"object\"')\n    }\n    this.reqOptions = _.pick(options, ['agent', 'ca', 'cert', 'ciphers', 'clientCertEngine', 'crl', 'dhparam', 'ecdhCurve', 'family', 'honorCipherOrder', 'key', 'passphrase', 'pfx', 'rejectUnauthorized', 'secureOptions', 'secureProtocol', 'servername', 'sessionIdContext'])\n  }\n\n  // returns *options* object that can be used with http.request()\n  // Takes care of constructing virtual-host-style or path-style hostname\n  getRequestOptions(opts) {\n    var method = opts.method\n    var region = opts.region\n    var bucketName = opts.bucketName\n    var objectName = opts.objectName\n    var headers = opts.headers\n    var query = opts.query\n\n    var reqOptions = {method}\n    reqOptions.headers = {}\n\n    // Verify if virtual host supported.\n    var virtualHostStyle\n    if (bucketName) {\n      virtualHostStyle = isVirtualHostStyle(this.host, this.protocol, bucketName, this.pathStyle)\n    }\n\n    if (this.port) reqOptions.port = this.port\n    reqOptions.protocol = this.protocol\n\n    if (objectName) {\n      objectName = `${uriResourceEscape(objectName)}`\n    }\n\n    reqOptions.path = '/'\n\n    // Save host.\n    reqOptions.host = this.host\n    // For Amazon S3 endpoint, get endpoint based on region.\n    if (isAmazonEndpoint(reqOptions.host)) {\n      const accelerateEndPoint = this.getAccelerateEndPointIfSet(bucketName, objectName)\n      if (accelerateEndPoint ) {\n        reqOptions.host = `${accelerateEndPoint}`\n      }else {\n        reqOptions.host = getS3Endpoint(region)\n      }\n    }\n\n    if (virtualHostStyle && !opts.pathStyle) {\n      // For all hosts which support virtual host style, `bucketName`\n      // is part of the hostname in the following format:\n      //\n      //  var host = 'bucketName.example.com'\n      //\n      if (bucketName) reqOptions.host = `${bucketName}.${reqOptions.host}`\n      if (objectName) reqOptions.path = `/${objectName}`\n    } else {\n      // For all S3 compatible storage services we will fallback to\n      // path style requests, where `bucketName` is part of the URI\n      // path.\n      if (bucketName) reqOptions.path = `/${bucketName}`\n      if (objectName) reqOptions.path = `/${bucketName}/${objectName}`\n    }\n\n    if (query) reqOptions.path += `?${query}`\n    reqOptions.headers.host = reqOptions.host\n    if ((reqOptions.protocol === 'http:' && reqOptions.port !== 80) ||\n        (reqOptions.protocol === 'https:' && reqOptions.port !== 443)) {\n      reqOptions.headers.host = `${reqOptions.host}:${reqOptions.port}`\n    }\n    reqOptions.headers['user-agent'] = this.userAgent\n    if (headers) {\n      // have all header keys in lower case - to make signing easy\n      _.map(headers, (v, k) => reqOptions.headers[k.toLowerCase()] = v)\n    }\n\n    // Use any request option specified in uosClient.setRequestOptions()\n    reqOptions = Object.assign({}, this.reqOptions, reqOptions)\n\n    return reqOptions\n  }\n\n  // Set application specific information.\n  //\n  // Generates User-Agent in the following style.\n  //\n  //       UOS (OS; ARCH) LIB/VER APP/VER\n  //\n  // __Arguments__\n  // * `appName` _string_ - Application name.\n  // * `appVersion` _string_ - Application version.\n  setAppInfo(appName, appVersion) {\n    if (!isString(appName)) {\n      throw new TypeError(`Invalid appName: ${appName}`)\n    }\n    if (appName.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appName cannot be empty.')\n    }\n    if (!isString(appVersion)) {\n      throw new TypeError(`Invalid appVersion: ${appVersion}`)\n    }\n    if (appVersion.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appVersion cannot be empty.')\n    }\n    this.userAgent = `${this.userAgent} ${appName}/${appVersion}`\n  }\n\n  // Calculate part size given the object size. Part size will be atleast this.partSize\n  calculatePartSize(size) {\n    if (!isNumber(size)) {\n      throw new TypeError('size should be of type \"number\"')\n    }\n    if (size > this.maxObjectSize) {\n      throw new TypeError(`size should not be more than ${this.maxObjectSize}`)\n    }\n    if (this.overRidePartSize) {\n      return this.partSize\n    }\n    var partSize = this.partSize\n    for (;;) { \t\t\t// while(true) {...} throws linting error.\n      // If partSize is big enough to accomodate the object size, then use it.\n      if ((partSize * 10000) > size) {\n        return partSize\n      }\n      // Try part sizes as 64MB, 80MB, 96MB etc.\n      partSize += 16*1024*1024\n    }\n  }\n\n  // log the request, response, error\n  logHTTP(reqOptions, response, err) {\n    // if no logstreamer available return.\n    if (!this.logStream) return\n    if (!isObject(reqOptions)) {\n      throw new TypeError('reqOptions should be of type \"object\"')\n    }\n    if (response && !isReadableStream(response)) {\n      throw new TypeError('response should be of type \"Stream\"')\n    }\n    if (err && !(err instanceof Error)) {\n      throw new TypeError('err should be of type \"Error\"')\n    }\n    var logHeaders = (headers) => {\n      _.forEach(headers, (v, k) => {\n        if (k == 'authorization') {\n          var redacter = new RegExp('Signature=([0-9a-f]+)')\n          v = v.replace(redacter, 'Signature=**REDACTED**')\n        }\n        this.logStream.write(`${k}: ${v}\\n`)\n      })\n      this.logStream.write('\\n')\n    }\n    this.logStream.write(`REQUEST: ${reqOptions.method} ${reqOptions.path}\\n`)\n    logHeaders(reqOptions.headers)\n    if (response) {\n      this.logStream.write(`RESPONSE: ${response.statusCode}\\n`)\n      logHeaders(response.headers)\n    }\n    if (err) {\n      this.logStream.write('ERROR BODY:\\n')\n      var errJSON = JSON.stringify(err, null, '\\t')\n      this.logStream.write(`${errJSON}\\n`)\n    }\n  }\n\n  // Enable tracing\n  traceOn(stream) {\n    if (!stream) stream = process.stdout\n    this.logStream = stream\n  }\n\n  // Disable tracing\n  traceOff() {\n    this.logStream = null\n  }\n\n  // makeRequest is the primitive used by the apis for making S3 requests.\n  // payload can be empty string in case of no payload.\n  // statusCode is the expected statusCode. If response.statusCode does not match\n  // we parse the XML error and call the callback with the error message.\n  makeRequest(options, payload, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isString(payload) && !isObject(payload)) {\n      // Buffer is of type 'object'\n      throw new TypeError('payload should be of type \"string\" or \"Buffer\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!options.headers) options.headers = {}\n    if (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE') {\n      options.headers['content-length'] = payload.length\n    }\n    var sha256sum = ''\n    if (this.enableSHA256) sha256sum = toSha256(payload)\n    var stream = readableStream(payload)\n    this.makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb)\n  }\n\n  // makeRequestStream will be used directly instead of makeRequest in case the payload\n  // is available as a stream. for ex. putObject\n  makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isReadableStream(stream)) {\n      throw new errors.InvalidArgumentError('stream should be a readable Stream')\n    }\n    if (!isString(sha256sum)) {\n      throw new TypeError('sha256sum should be of type \"string\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // sha256sum will be empty for anonymous or https requests\n    if (!this.enableSHA256 && sha256sum.length !== 0) {\n      throw new errors.InvalidArgumentError(`sha256sum expected to be empty for anonymous or https requests`)\n    }\n    // sha256sum should be valid for non-anonymous http requests.\n    if (this.enableSHA256 && sha256sum.length !== 64) {\n      throw new errors.InvalidArgumentError(`Invalid sha256sum : ${sha256sum}`)\n    }\n\n    var _makeRequest = (e, region) => {\n      if (e) return cb(e)\n      options.region = region\n      var reqOptions = this.getRequestOptions(options)\n      if (!this.anonymous) {\n        // For non-anonymous https requests sha256sum is 'UNSIGNED-PAYLOAD' for signature calculation.\n        if (!this.enableSHA256) sha256sum = 'UNSIGNED-PAYLOAD'\n\n        let date = new Date()\n\n        reqOptions.headers['x-amz-date'] = makeDateLong(date)\n        reqOptions.headers['x-amz-content-sha256'] = sha256sum\n        if (this.sessionToken) {\n          reqOptions.headers['x-amz-security-token'] = this.sessionToken\n        }\n\n        var authorization = signV4(reqOptions, this.accessKey, this.secretKey, region, date)\n        reqOptions.headers.authorization = authorization\n      }\n      var req = this.transport.request(reqOptions, response => {\n        if (statusCode !== response.statusCode) {\n          // For an incorrect region, S3 server always sends back 400.\n          // But we will do cache invalidation for all errors so that,\n          // in future, if AWS S3 decides to send a different status code or\n          // XML error code we will still work fine.\n          delete(this.regionMap[options.bucketName])\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, errorTransformer)\n            .on('error', e => {\n              this.logHTTP(reqOptions, response, e)\n              cb(e)\n            })\n          return\n        }\n        this.logHTTP(reqOptions, response)\n        if (returnResponse) return cb(null, response)\n        // We drain the socket so that the connection gets closed. Note that this\n        // is not expensive as the socket will not have any data.\n        response.on('data', ()=>{})\n        cb(null)\n      })\n      let pipe = pipesetup(stream, req)\n      pipe.on('error', e => {\n        this.logHTTP(reqOptions, null, e)\n        cb(e)\n      })\n    }\n    if (region) return _makeRequest(null, region)\n    this.getBucketRegion(options.bucketName, _makeRequest)\n  }\n\n  // gets the region of the bucket\n  getBucketRegion(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    // Region is set with constructor, return the region right here.\n    if (this.region) return cb(null, this.region)\n\n    if (this.regionMap[bucketName]) return cb(null, this.regionMap[bucketName])\n    var extractRegion = (response) => {\n      var transformer = transformers.getBucketRegionTransformer()\n      var region = 'us-east-1'\n      pipesetup(response, transformer)\n        .on('error', cb)\n        .on('data', data => {\n          if (data) region = data\n        })\n        .on('end', () => {\n          this.regionMap[bucketName] = region\n          cb(null, region)\n        })\n    }\n\n    var method = 'GET'\n    var query = 'location'\n\n    // `getBucketLocation` behaves differently in following ways for\n    // different environments.\n    //\n    // - For nodejs env we default to path style requests.\n    // - For browser env path style requests on buckets yields CORS\n    //   error. To circumvent this problem we make a virtual host\n    //   style request signed with 'us-east-1'. This request fails\n    //   with an error 'AuthorizationHeaderMalformed', additionally\n    //   the error XML also provides Region of the bucket. To validate\n    //   this region is proper we retry the same request with the newly\n    //   obtained region.\n    var pathStyle = this.pathStyle && typeof window === 'undefined'\n\n    this.makeRequest({method, bucketName, query, pathStyle}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) {\n        if (e.name === 'AuthorizationHeaderMalformed') {\n          var region = e.Region\n          if (!region) return cb(e)\n          this.makeRequest({method, bucketName, query}, '', 200, region, true, (e, response) => {\n            if (e) return cb(e)\n            extractRegion(response)\n          })\n          return\n        }\n        return cb(e)\n      }\n      extractRegion(response)\n    })\n  }\n\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded (optional, default `''`)\n  // * `recursive` _bool_: directory style listing when false, recursive listing when true (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucket)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucket)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    var delimiter = recursive ? '' : '/'\n    var keyMarker = ''\n    var uploadIdMarker = ''\n    var uploads = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one upload info per _read()\n      if (uploads.length) {\n        return readStream.push(uploads.shift())\n      }\n      if (ended) return readStream.push(null)\n      this.listIncompleteUploadsQuery(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => uploads.push(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            // for each incomplete upload add the sizes of its uploaded parts\n            this.listParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              uploads.push(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              readStream.emit('error', err)\n              return\n            }\n            if (result.isTruncated) {\n              keyMarker = result.nextKeyMarker\n              uploadIdMarker = result.nextUploadIdMarker\n            } else {\n              ended = true\n            }\n            readStream._read()\n          })\n        })\n    }\n    return readStream\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName}, '', 200, '', false, err => {\n      if (err) {\n        if (err.code == 'NoSuchBucket' || err.code == 'NotFound') return cb(null, false)\n        return cb(err)\n      }\n      cb(null, true)\n    })\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, getOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, getOpts, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream (optional, if not specified we read the rest of the file from the offset)\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, getOpts={}, cb) {\n    if (isFunction(length)) {\n      cb = length\n      length = 0\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isNumber(offset)) {\n      throw new TypeError('offset should be of type \"number\"')\n    }\n    if (!isNumber(length)) {\n      throw new TypeError('length should be of type \"number\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.range = range\n    }\n\n    var expectedStatus = 200\n    if (range) {\n      expectedStatus = 206\n    }\n    var method = 'GET'\n\n    var query = querystring.stringify(getOpts)\n    this.makeRequest({method, bucketName, objectName, headers, query}, '', expectedStatus, '', true, cb)\n  }\n\n  // Uploads the object.\n  //\n  // Uploading a stream\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `stream` _Stream_: Readable stream\n  // * `size` _number_: size of the object (optional)\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  //\n  // Uploading \"Buffer\" or \"string\"\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `string or Buffer` _string_ or _Buffer_: string or buffer\n  // * `callback(err, objInfo)` _function_: `err` is `null` in case of success and `info` will have the following object details:\n  //   * `etag` _string_: etag of the object\n  //   * `versionId` _string_: versionId of the object\n  putObject(bucketName, objectName, stream, size, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    // We'll need to shift arguments to the left because of size and metaData.\n    if (isFunction(size)) {\n      callback = size\n      metaData = {}\n    } else if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {}\n    }\n\n    // We'll need to shift arguments to the left because of metaData\n    // and size being optional.\n    if (isObject(size)) {\n      metaData = size\n    }\n\n    //Ensures Metadata has appropriate prefix for A3 API\n    metaData = prependXAMZMeta(metaData)\n    if (typeof stream === 'string' || stream instanceof Buffer) {\n      // Adapts the non-stream interface into a stream.\n      size = stream.length\n      stream = readableStream(stream)\n    } else if (!isReadableStream(stream)) {\n      throw new TypeError('third argument should be of type \"stream.Readable\" or \"Buffer\" or \"string\"')\n    }\n\n    if (!isFunction(callback)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if (isNumber(size) && size < 0) {\n      throw new errors.InvalidArgumentError(`size cannot be negative, given size: ${size}`)\n    }\n\n    // Get the part size and forward that to the BlockStream. Default to the\n    // largest block size possible if necessary.\n    if (!isNumber(size))\n      size = this.maxObjectSize\n\n    size = this.calculatePartSize(size)\n\n    // s3 requires that all non-end chunks be at least `this.partSize`,\n    // so we chunk the stream until we hit either that size or the end before\n    // we flush it to s3.\n    let chunker = new BlockStream2({size, zeroPadding: false})\n\n    // This is a Writable stream that can be written to in order to upload\n    // to the specified bucket and object automatically.\n    let uploader = new ObjectUploader(this, bucketName, objectName, size, metaData, callback)\n    // stream => chunker => uploader\n    stream.pipe(chunker).pipe(uploader)\n  }\n\n  // Copy the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `srcObject` _string_: path of the source object to be copied\n  // * `conditions` _CopyConditions_: copy conditions that needs to be satisfied (optional, default `null`)\n  // * `callback(err, {etag, lastModified})` _function_: non null `err` indicates error, `etag` _string_ and `listModifed` _Date_ are respectively the etag and the last modified date of the newly copied object\n  copyObject(arg1, arg2, arg3, arg4, arg5) {\n    var bucketName = arg1\n    var objectName = arg2\n    var srcObject = arg3\n    var conditions, cb\n    if (typeof arg4 == 'function' && arg5 === undefined) {\n      conditions = null\n      cb = arg4\n    } else {\n      conditions = arg4\n      cb = arg5\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(srcObject)) {\n      throw new TypeError('srcObject should be of type \"string\"')\n    }\n    if (srcObject === \"\") {\n      throw new errors.InvalidPrefixError(`Empty source prefix`)\n    }\n\n    if (conditions !== null && !(conditions instanceof CopyConditions)) {\n      throw new TypeError('conditions should be of type \"CopyConditions\"')\n    }\n\n    var headers = {}\n    headers['x-amz-copy-source'] = uriEscape(srcObject)\n\n    if (conditions !== null) {\n      if (conditions.modified !== \"\") {\n        headers['x-amz-copy-source-if-modified-since'] = conditions.modified\n      }\n      if (conditions.unmodified !== \"\") {\n        headers['x-amz-copy-source-if-unmodified-since'] = conditions.unmodified\n      }\n      if (conditions.matchETag !== \"\") {\n        headers['x-amz-copy-source-if-match'] = conditions.matchETag\n      }\n      if (conditions.matchEtagExcept !== \"\") {\n        headers['x-amz-copy-source-if-none-match'] = conditions.matchETagExcept\n      }\n    }\n\n    var method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // list a batch of objects\n  listObjectsQuery(bucketName, prefix, marker, listQueryOpts={}) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(marker)) {\n      throw new TypeError('marker should be of type \"string\"')\n    }\n    let{\n      Delimiter,\n      MaxKeys,\n      IncludeVersion,\n    } = listQueryOpts\n\n    if (!isObject(listQueryOpts)) {\n      throw new TypeError('listQueryOpts should be of type \"object\"')\n    }\n   \n    if (!isString(Delimiter)) {\n      throw new TypeError('Delimiter should be of type \"string\"')\n    }\n\n    if (!isNumber(MaxKeys)) {\n      throw new TypeError('MaxKeys should be of type \"number\"')\n    }\n\n    const queries = []\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(Delimiter)}`)\n\n    if (IncludeVersion) {\n      queries.push(`versions`)\n    }\n\n    if (marker) {\n      marker = uriEscape(marker)\n      if (IncludeVersion) {\n        queries.push(`key-marker=${marker}`)\n      } else {\n        queries.push(`marker=${marker}`)\n      }\n    }\n\n    // no need to escape maxKeys\n    if (MaxKeys) {\n      if (MaxKeys >= 1000) {\n        MaxKeys = 1000\n      }\n      queries.push(`max-keys=${MaxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n\n    var method = 'GET'\n    var transformer = transformers.getListObjectsTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `listOpts _object_: query params to list object with below keys\n  // *    listOpts.MaxKeys _int_ maximum number of keys to return\n  // *    listOpts.IncludeVersion  _bool_ true|false to include versions.\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  // * `obj.name` _string_: name of the object\n  // * `obj.prefix` _string_: name of the object prefix\n  // * `obj.size` _number_: size of the object\n  // * `obj.etag` _string_: etag of the object\n  // * `obj.lastModified` _Date_: modified time stamp\n  // * `obj.isDeleteMarker` _boolean_: true if it is a delete marker\n  // * `obj.versionId` _string_: versionId of the object\n  listObjects(bucketName, prefix, recursive, listOpts={}) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isObject(listOpts)) {\n      throw new TypeError('listOpts should be of type \"object\"')\n    }\n    var marker = ''\n    const listQueryOpts={\n      Delimiter:recursive ? '' : '/', // if recursive is false set delimiter to '/'\n      MaxKeys: 1000,\n      IncludeVersion:listOpts.IncludeVersion,\n    }\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsQuery(bucketName, prefix, marker, listQueryOpts)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            marker = result.nextMarker || result.versionIdMarker\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // listObjectsV2Query - (List Objects V2) - List some or all (up to 1000) of the objects in a bucket.\n  //\n  // You can use the request parameters as selection criteria to return a subset of the objects in a bucket.\n  // request parameters :-\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: Limits the response to keys that begin with the specified prefix.\n  // * `continuation-token` _string_: Used to continue iterating over a set of objects.\n  // * `delimiter` _string_: A delimiter is a character you use to group keys.\n  // * `max-keys` _number_: Sets the maximum number of keys returned in the response body.\n  // * `start-after` _string_: Specifies the key to start after when listing objects in a bucket.\n  listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, maxKeys, startAfter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(continuationToken)) {\n      throw new TypeError('continuationToken should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    var queries = []\n\n    // Call for listing objects v2 API\n    queries.push(`list-type=2`)\n\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (continuationToken) {\n      continuationToken = uriEscape(continuationToken)\n      queries.push(`continuation-token=${continuationToken}`)\n    }\n    // Set start-after\n    if (startAfter) {\n      startAfter = uriEscape(startAfter)\n      queries.push(`start-after=${startAfter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListObjectsV2Transformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket using S3 ListObjects V2\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `startAfter` _string_: Specifies the key to start after when listing objects in a bucket. (optional, default `''`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `obj.name` _string_: name of the object\n  //   * `obj.prefix` _string_: name of the object prefix\n  //   * `obj.size` _number_: size of the object\n  //   * `obj.etag` _string_: etag of the object\n  //   * `obj.lastModified` _Date_: modified time stamp\n  listObjectsV2(bucketName, prefix, recursive, startAfter) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (startAfter === undefined) startAfter = ''\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var continuationToken = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, 1000, startAfter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            continuationToken = result.nextContinuationToken\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `statOpts`  _object_ : Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional).\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.metaData` _string_: MetaData of the object\n  //   * `stat.lastModified` _Date_: modified time stamp\n  //   * `stat.versionId` _string_: version id of the object if available\n  statObject(bucketName, objectName, statOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(statOpts)) {\n      cb = statOpts\n      statOpts={}\n    }\n\n    if(!isObject(statOpts)){\n      throw new errors.InvalidArgumentError('statOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var query = querystring.stringify(statOpts)\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName, objectName, query},'' ,200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      // We drain the socket so that the connection gets closed. Note that this\n      // is not expensive as the socket will not have any data.\n      response.on('data', ()=>{})\n\n      const result = {\n        size: +response.headers['content-length'],\n        metaData: extractMetadata(response.headers),\n        lastModified: new Date(response.headers['last-modified']),\n        versionId:getVersionId(response.headers),\n        etag:sanitizeETag(response.headers.etag)\n      }\n\n      cb(null, result)\n    })\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `removeOpts` _object_: Version of the object in the form `{versionId:'my-uuid', governanceBypass:true|false}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, removeOpts={} , cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(removeOpts)) {\n      cb = removeOpts\n      removeOpts={}\n    }\n\n    if(!isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const queryParams = {}\n\n    if(removeOpts.versionId){\n      queryParams.versionId=`${removeOpts.versionId}`\n    }\n    const headers = {}\n    if(removeOpts.governanceBypass){\n      headers[\"X-Amz-Bypass-Governance-Retention\"]=true\n    }\n\n    const query = querystring.stringify( queryParams )\n\n    let requestOptions = {method, bucketName, objectName, headers}\n    if(query){\n      requestOptions['query']=query\n    }\n\n    this.makeRequest(requestOptions, '', 204, '', false, cb)\n  }\n\n  // Remove all the objects residing in the objectsList.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectsList` _array_: array of objects of one of the following:\n  // *         List of Object names as array of strings which are object keys:  ['objectname1','objectname2']\n  // *         List of Object name and versionId as an object:  [{name:\"objectname\",versionId:\"my-version-id\"}]\n\n  removeObjects(bucketName, objectsList, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isArray(objectsList)) {\n      throw new errors.InvalidArgumentError('objectsList should be a list')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const maxEntries = 1000\n    const query = 'delete'\n    const method = 'POST'\n\n    let result = objectsList.reduce((result, entry) => {\n      result.list.push(entry)\n      if (result.list.length === maxEntries) {\n        result.listOfList.push(result.list)\n        result.list = []\n      }\n      return result\n    }, {listOfList: [], list:[]})\n\n    if (result.list.length > 0) {\n      result.listOfList.push(result.list)\n    }\n\n    const encoder = new TextEncoder()\n\n    async.eachSeries(result.listOfList, (list, callback) => {\n      var deleteObjects={\"Delete\":[{Quiet:true}], }\n      list.forEach(function(value){\n        //Backward Compatibility\n        let entry\n        if(isObject(value)){\n          entry={\"Object\": [{\"Key\": value.name,  \"VersionId\":value.versionId}]}\n        }else{\n          entry={\"Object\": [{\"Key\": value}]}\n        }\n\n        deleteObjects[\"Delete\"].push(entry)\n      })\n      const builder = new xml2js.Builder({ headless: true })\n      let payload = builder.buildObject(deleteObjects)\n      payload = encoder.encode(payload)\n      const headers = {}\n\n      headers['Content-MD5'] = toMd5(payload)\n\n      this.makeRequest({ method, bucketName, query, headers}, payload, 200, '', false, (e) => {\n        if (e) return callback(e)\n        callback(null)\n      })\n    }, cb)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n\n  // Calls implemented below are related to multipart.\n\n  // Initiate a new multipart upload.\n  initiateNewMultipartUpload(bucketName, objectName, metaData, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(metaData)) {\n      throw new errors.InvalidObjectNameError('contentType should be of type \"object\"')\n    }\n    var method = 'POST'\n    let headers = Object.assign({}, metaData)\n    var query = 'uploads'\n    this.makeRequest({method, bucketName, objectName, query, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getInitiateMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n  }\n\n  // Complete the multipart upload. After all the parts are uploaded issuing\n  // this call will aggregate the parts on the server into a single object.\n  completeMultipartUpload(bucketName, objectName, uploadId, etags, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isObject(etags)) {\n      throw new TypeError('etags should be of type \"Array\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n\n    var method = 'POST'\n    var query = `uploadId=${uriEscape(uploadId)}`\n\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {CompleteMultipartUpload: parts}\n    var payload = Xml(payloadObject)\n\n    this.makeRequest({method, bucketName, objectName, query}, payload, 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCompleteMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          if (result.errCode) {\n            // Multipart Complete API returns an error XML after a 200 http status\n            cb(new errors.S3Error(result.errMessage))\n          } else {\n            cb(null, result.etag)\n          }\n        })\n    })\n  }\n\n  // Get part-info of all parts of an incomplete upload specified by uploadId.\n  listParts(bucketName, objectName, uploadId, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var parts = []\n    var listNext = (marker) => {\n      this.listPartsQuery(bucketName, objectName, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  // Called by listParts to fetch a batch of part-info\n  listPartsQuery(bucketName, objectName, uploadId, marker, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isNumber(marker)) {\n      throw new TypeError('marker should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var query = ''\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uriEscape(uploadId)}`\n\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListPartsTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // Called by listIncompleteUploads to fetch a batch of incomplete uploads.\n  listIncompleteUploadsQuery(bucketName, prefix, keyMarker, uploadIdMarker, delimiter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(keyMarker)) {\n      throw new TypeError('keyMarker should be of type \"string\"')\n    }\n    if (!isString(uploadIdMarker)) {\n      throw new TypeError('uploadIdMarker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    var queries = []\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListMultipartTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // Find uploadId of an incomplete upload.\n  findUploadId(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    var latestUpload\n    var listNext = (keyMarker, uploadIdMarker) => {\n      this.listIncompleteUploadsQuery(bucketName, objectName, keyMarker, uploadIdMarker, '')\n        .on('error', e => cb(e))\n        .on('data', result => {\n          result.uploads.forEach(upload => {\n            if (upload.key === objectName) {\n              if (!latestUpload ||\n                (upload.initiated.getTime() > latestUpload.initiated.getTime())) {\n                latestUpload = upload\n                return\n              }\n            }\n          })\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          if (latestUpload) return cb(null, latestUpload.uploadId)\n          cb(null, undefined)\n        })\n    }\n    listNext('', '')\n  }\n\n  // Returns a function that can be used for uploading objects.\n  // If multipart === true, it returns function that is used to upload\n  // a part of the multipart.\n  getUploader(bucketName, objectName, metaData, multipart) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isBoolean(multipart)) {\n      throw new TypeError('multipart should be of type \"boolean\"')\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metadata should be of type \"object\"')\n    }\n\n    var validate = (stream, length, sha256sum, md5sum, cb) => {\n      if (!isReadableStream(stream)) {\n        throw new TypeError('stream should be of type \"Stream\"')\n      }\n      if (!isNumber(length)) {\n        throw new TypeError('length should be of type \"number\"')\n      }\n      if (!isString(sha256sum)) {\n        throw new TypeError('sha256sum should be of type \"string\"')\n      }\n      if (!isString(md5sum)) {\n        throw new TypeError('md5sum should be of type \"string\"')\n      }\n      if (!isFunction(cb)) {\n        throw new TypeError('callback should be of type \"function\"')\n      }\n    }\n    var simpleUploader = (...args) => {\n      validate(...args)\n      var query = ''\n      upload(query, ...args)\n    }\n    var multipartUploader = (uploadId, partNumber, ...rest) => {\n      if (!isString(uploadId)) {\n        throw new TypeError('uploadId should be of type \"string\"')\n      }\n      if (!isNumber(partNumber)) {\n        throw new TypeError('partNumber should be of type \"number\"')\n      }\n      if (!uploadId) {\n        throw new errors.InvalidArgumentError('Empty uploadId')\n      }\n      if (!partNumber) {\n        throw new errors.InvalidArgumentError('partNumber cannot be 0')\n      }\n      validate(...rest)\n      var query = `partNumber=${partNumber}&uploadId=${uriEscape(uploadId)}`\n      upload(query, ...rest)\n    }\n    var upload = (query, stream, length, sha256sum, md5sum, cb) => {\n      var method = 'PUT'\n      let headers = {'Content-Length': length}\n\n      if (!multipart) {\n        headers = Object.assign({}, metaData, headers)\n      }\n\n      if (!this.enableSHA256) headers['Content-MD5'] = md5sum\n      this.makeRequestStream({method, bucketName, objectName, query, headers},\n                             stream, sha256sum, 200, '', true, (e, response) => {\n                               if (e) return cb(e)\n                               const result = {\n                                 etag: sanitizeETag(response.headers.etag),\n                                 versionId:getVersionId(response.headers)\n                               }\n                               // Ignore the 'data' event so that the stream closes. (nodejs stream requirement)\n                               response.on('data', () => {})\n                               cb(null, result)\n                             })\n    }\n    if (multipart) {\n      return multipartUploader\n    }\n    return simpleUploader\n  }\n\n  // Listens for bucket notifications. Returns an EventEmitter.\n  listenBucketNotification(bucketName, prefix, suffix, events) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix must be of type string')\n    }\n    if (!isString(suffix)) {\n      throw new TypeError('suffix must be of type string')\n    }\n    if (!isArray(events)) {\n      throw new TypeError('events must be of type Array')\n    }\n    let listener = new NotificationPoller(this, bucketName, prefix, suffix, events)\n    listener.start()\n\n    return listener\n  }\n\n  /** To set Tags on a bucket or object based on the params\n     *  __Arguments__\n     * taggingParams _object_ Which contains the following properties\n     *  bucketName _string_,\n     *  objectName _string_ (Optional),\n     *  tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n     *  putOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n     *  cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n     */\n  setTagging(taggingParams){\n\n    const { bucketName, objectName, tags, putOpts={}, cb} = taggingParams\n    const method = 'PUT'\n    let query =\"tagging\"\n\n    if(putOpts && putOpts.versionId){\n      query =`${query}&versionId=${putOpts.versionId}`\n    }\n    const tagsList=[]\n    for (const [key, value] of Object.entries(tags)) {\n      tagsList.push( { Key: key, Value: value} )\n    }\n    const taggingConfig = {\n      Tagging: {\n        TagSet: {\n          Tag: tagsList\n        }\n      }\n    }\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ headless:true,renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(taggingConfig)\n    payload = encoder.encode(payload)\n      \n    const requestOptions = { method, bucketName, query, headers }\n\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, 200, '', false, cb)\n\n  }\n\n  /** Remove Tags on an Bucket/Object based on params\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_ (optional)\n   * removeOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeTagging({bucketName, objectName, removeOpts, cb}){\n    const method = 'DELETE'\n    let query =\"tagging\"\n\n    if(removeOpts && Object.keys(removeOpts).length && removeOpts.versionId){\n      query =`${query}&versionId=${removeOpts.versionId}`\n    }\n    const requestOptions = { method, bucketName, objectName, query }\n\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n    // FIXME: This is a hack and it will be updated when server side is fixed to send the correct '204' status code\n    this.makeRequest(requestOptions, '', 200, '', true, cb)\n  }\n\n  /** Put lifecycle configuration on a bucket.\n  /** Apply lifecycle configuration on a bucket.\n   * bucketName _string_\n   * policyConfig _object_ a valid policy configuration object.\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  applyBucketLifecycle(bucketName, policyConfig, cb){\n    const method = 'PUT'\n    const query=\"lifecycle\"\n\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ rootName:'LifecycleConfiguration', headless:true, renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(policyConfig)\n    payload = encoder.encode(payload)\n    const requestOptions = { method, bucketName, query, headers }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, 200, '', false, cb)\n\n  }\n\n  get extensions() {\n    if(!this.clientExtensions)\n    {\n      this.clientExtensions = new extensions(this)\n    }\n    return this.clientExtensions\n  }\n}\n\n// Promisify various public-facing APIs on the Client module.\nClient.prototype.bucketExists = promisify(Client.prototype.bucketExists)\n\nClient.prototype.getObject = promisify(Client.prototype.getObject)\nClient.prototype.getPartialObject = promisify(Client.prototype.getPartialObject)\nClient.prototype.putObject = promisify(Client.prototype.putObject)\nClient.prototype.copyObject = promisify(Client.prototype.copyObject)\nClient.prototype.statObject = promisify(Client.prototype.statObject)\nClient.prototype.removeObject = promisify(Client.prototype.removeObject)\nClient.prototype.removeObjects = promisify(Client.prototype.removeObjects)\n\nexport class CopyConditions {\n  constructor() {\n    this.modified = \"\"\n    this.unmodified = \"\"\n    this.matchETag = \"\"\n    this.matchETagExcept = \"\"\n  }\n\n  setModified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.modified = date.toUTCString()\n  }\n\n  setUnmodified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.unmodified = date.toUTCString()\n  }\n\n  setMatchETag(etag) {\n    this.matchETag = etag\n  }\n\n  setMatchETagExcept(etag) {\n    this.matchETagExcept = etag\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nexport class PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(date) {\n    if (!date) {\n      throw new errors.InvalidDateError('Invalid date : cannot be null')\n    }\n    this.policy.expiration = date.toISOString()\n  }\n\n  // set object name\n  setKey(objectName) {\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name : ${objectName}`)\n    }\n    this.policy.conditions.push(['eq', '$key', objectName])\n    this.formData.key = objectName\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    this.policy.conditions.push(['starts-with', '$key', prefix])\n    this.formData.key = prefix\n  }\n\n  // set bucket name\n  setBucket(bucketName) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    this.policy.conditions.push(['eq', '$bucket', bucketName])\n    this.formData.bucket = bucketName\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new Error('content-type cannot be null')\n    }\n    this.policy.conditions.push(['eq', '$Content-Type', type])\n    this.formData['Content-Type'] = type\n  }\n\n  // set minimum/maximum length of what Content-Length can be.\n  setContentLengthRange(min, max) {\n    if (min > max) {\n      throw new Error('min cannot be more than max')\n    }\n    if (min < 0) {\n      throw new Error('min should be > 0')\n    }\n    if (max < 0) {\n      throw new Error('max should be > 0')\n    }\n    this.policy.conditions.push(['content-length-range', min, max])\n  }\n}\n\nexport * from './notification'\n"],"file":"uos.js"}