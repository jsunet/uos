{"version":3,"sources":["minio.js"],"names":["Package","require","Client","params","secure","Error","useSSL","port","endPoint","errors","InvalidEndpointError","InvalidArgumentError","region","host","toLowerCase","protocol","transport","Http","Https","libraryComments","process","platform","arch","libraryAgent","version","accessKey","secretKey","sessionToken","userAgent","pathStyle","undefined","anonymous","regionMap","partSize","overRidePartSize","maximumPartSize","maxObjectSize","enableSHA256","s3AccelerateEndpoint","reqOptions","bucketName","objectName","_","isEmpty","indexOf","options","TypeError","pick","opts","method","headers","query","virtualHostStyle","path","accelerateEndPoint","getAccelerateEndPointIfSet","map","v","k","Object","assign","appName","appVersion","trim","size","response","err","logStream","logHeaders","forEach","redacter","RegExp","replace","write","statusCode","errJSON","JSON","stringify","stream","stdout","payload","returnResponse","cb","length","sha256sum","makeRequestStream","_makeRequest","e","getRequestOptions","date","Date","authorization","req","request","errorTransformer","transformers","getErrorTransformer","on","logHTTP","pipe","getBucketRegion","InvalidBucketNameError","extractRegion","transformer","getBucketRegionTransformer","data","window","makeRequest","name","Region","makeOpts","createBucketConfiguration","push","_attr","xmlns","LocationConstraint","payloadObject","CreateBucketConfiguration","ObjectLocking","getListBucketTransformer","buckets","result","bucket","prefix","recursive","InvalidPrefixError","delimiter","keyMarker","uploadIdMarker","uploads","ended","readStream","Stream","Readable","objectMode","_read","shift","listIncompleteUploadsQuery","emit","prefixes","async","eachSeries","upload","listParts","key","uploadId","parts","reduce","acc","item","isTruncated","nextKeyMarker","nextUploadIdMarker","code","isValidBucketNameError","InvalidObjectNameError","removeUploadId","during","findUploadId","filePath","getOpts","partFile","partFileStream","objStat","rename","fs","waterfall","statObject","dirname","ignore","etag","stat","stats","offset","createWriteStream","flags","getPartialObject","downloadStream","range","expectedStatus","querystring","metaData","callback","multipart","uploader","getUploader","hash","getHashSummer","start","end","autoClose","createReadStream","md5sum","objInfo","etags","initiateNewMultipartUpload","calculatePartSize","part","partsDone","partNumber","uploadedSize","whilst","md5sumHex","Buffer","from","toString","completeMultipartUpload","rest","chunker","BlockStream2","zeroPadding","ObjectUploader","arg1","arg2","arg3","arg4","arg5","srcObject","conditions","CopyConditions","modified","unmodified","matchETag","matchEtagExcept","matchETagExcept","getCopyObjectTransformer","marker","listQueryOpts","Delimiter","MaxKeys","IncludeVersion","queries","sort","join","getListObjectsTransformer","listOpts","objects","listObjectsQuery","nextMarker","versionIdMarker","continuationToken","maxKeys","startAfter","getListObjectsV2Transformer","listObjectsV2Query","nextContinuationToken","statOpts","lastModified","versionId","removeOpts","queryParams","governanceBypass","requestOptions","objectsList","maxEntries","entry","list","listOfList","encoder","TextEncoder","deleteObjects","Quiet","value","builder","xml2js","Builder","headless","buildObject","encode","policy","getConcater","InvalidBucketPolicyError","expires","reqParams","requestDate","AnonymousRequestError","url","pe","respHeaders","validRespHeaders","header","presignedUrl","PostPolicy","postPolicy","formData","dateStr","expiration","setSeconds","setExpires","policyBase64","signature","portStr","urlStr","postURL","getInitiateMultipartTransformer","element","Part","PartNumber","ETag","CompleteMultipartUpload","getCompleteMultipartTransformer","errCode","S3Error","errMessage","listNext","listPartsQuery","concat","getListPartsTransformer","maxUploads","unshift","getListMultipartTransformer","latestUpload","initiated","getTime","validate","simpleUploader","args","multipartUploader","config","rootName","renderOpts","setBucketNotification","NotificationConfig","getBucketNotificationTransformer","bucketNotification","suffix","events","listener","NotificationPoller","versionConfig","bucketVersioningTransformer","keys","taggingParams","tags","putOpts","tagsList","entries","Key","Value","taggingConfig","Tagging","TagSet","Tag","setTagging","removeTagging","getTagsTransformer","policyConfig","lifeCycleConfig","removeBucketLifecycle","applyBucketLifecycle","lifecycleTransformer","lifecycleConfig","lockConfigOpts","retentionModes","RETENTION_MODES","COMPLIANCE","GOVERNANCE","validUnits","RETENTION_VALIDITY_UNITS","DAYS","YEARS","mode","includes","unit","validity","ObjectLockEnabled","configKeys","difference","Rule","DefaultRetention","Mode","Days","Years","objectLockConfig","objectLockTransformer","retentionOpts","retainUntilDate","RetainUntilDate","retentionConfig","objectRetentionTransformer","encryptionConfig","encryptionObj","ApplyServerSideEncryptionByDefault","SSEAlgorithm","bucketEncConfig","bucketEncryptionTransformer","replicationConfig","role","rules","replicationParamsConfig","ReplicationConfiguration","Role","replicationConfigTransformer","legalHoldConfig","objectLegalHoldTransformer","setOpts","defaultOpts","status","LEGAL_HOLD_STATUS","ENABLED","DISABLED","Status","clientExtensions","extensions","prototype","makeBucket","listBuckets","bucketExists","removeBucket","getObject","fGetObject","putObject","fPutObject","copyObject","removeObject","removeObjects","presignedGetObject","presignedPutObject","presignedPostPolicy","getBucketNotification","removeAllBucketNotification","getBucketPolicy","setBucketPolicy","removeIncompleteUpload","getBucketVersioning","setBucketVersioning","setBucketTagging","removeBucketTagging","getBucketTagging","setObjectTagging","removeObjectTagging","getObjectTagging","setBucketLifecycle","getBucketLifecycle","setObjectLockConfig","getObjectLockConfig","putObjectRetention","getObjectRetention","setBucketEncryption","getBucketEncryption","removeBucketEncryption","setBucketReplication","getBucketReplication","removeBucketReplication","setObjectLegalHold","getObjectLegalHold","toUTCString","InvalidDateError","toISOString","type","min","max"],"mappings":"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","sourcesContent":["import fs from 'fs'\nimport Http from 'http'\nimport Https from 'https'\nimport Stream from 'stream'\nimport BlockStream2 from 'block-stream2'\nimport Xml from 'xml'\nimport xml2js from 'xml2js'\nimport async from 'async'\nimport querystring from 'querystring'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport _ from 'lodash'\nimport { TextEncoder } from \"web-encoding\"\n\nimport {\n  extractMetadata, prependXAMZMeta, isValidPrefix, isValidEndpoint, isValidBucketName,\n  isValidPort, isValidObjectName, isAmazonEndpoint, getScope,\n  uriEscape, uriResourceEscape, isBoolean, isFunction, isNumber,\n  isString, isObject, isArray, isValidDate, pipesetup,\n  readableStream, isReadableStream, isVirtualHostStyle,\n  insertContentType, makeDateLong, promisify, getVersionId, sanitizeETag,\n  toMd5, toSha256,\n  RETENTION_MODES, RETENTION_VALIDITY_UNITS, LEGAL_HOLD_STATUS\n} from './helpers.js'\n\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js'\n\nimport ObjectUploader from './object-uploader'\n\nimport * as transformers from './transformers'\n\nimport * as errors from './errors.js'\n\nimport { getS3Endpoint } from './s3-endpoints.js'\n\nimport { NotificationConfig, NotificationPoller } from './notification'\n\nimport extensions from './extensions'\n\nvar Package = require('../../package.json')\n\nexport class Client {\n  constructor(params) {\n    if (typeof params.secure !== 'undefined') throw new Error('\"secure\" option deprecated, \"useSSL\" should be used instead')\n    // Default values if not specified.\n    if (typeof params.useSSL === 'undefined') params.useSSL = true\n    if (!params.port) params.port = 0\n    // Validate input params.\n    if (!isValidEndpoint(params.endPoint)) {\n      throw new errors.InvalidEndpointError(`Invalid endPoint : ${params.endPoint}`)\n    }\n    if (!isValidPort(params.port)) {\n      throw new errors.InvalidArgumentError(`Invalid port : ${params.port}`)\n    }\n    if (!isBoolean(params.useSSL)) {\n      throw new errors.InvalidArgumentError(`Invalid useSSL flag type : ${params.useSSL}, expected to be of type \"boolean\"`)\n    }\n\n    // Validate region only if its set.\n    if (params.region) {\n      if (!isString(params.region)) {\n        throw new errors.InvalidArgumentError(`Invalid region : ${params.region}`)\n      }\n    }\n\n    var host = params.endPoint.toLowerCase()\n    var port = params.port\n    var protocol = ''\n    var transport\n    // Validate if configuration is not using SSL\n    // for constructing relevant endpoints.\n    if (params.useSSL === false) {\n      transport = Http\n      protocol = 'http:'\n      if (port === 0) {\n        port = 80\n      }\n    } else {\n      // Defaults to secure.\n      transport = Https\n      protocol = 'https:'\n      if (port === 0) {\n        port = 443\n      }\n    }\n\n    // if custom transport is set, use it.\n    if (params.transport) {\n      if (!isObject(params.transport)) {\n        throw new errors.InvalidArgumentError('Invalid transport type : ${params.transport}, expected to be type \"object\"')\n      }\n      transport = params.transport\n    }\n\n    // User Agent should always following the below style.\n    // Please open an issue to discuss any new changes here.\n    //\n    //       UOS (OS; ARCH) LIB/VER APP/VER\n    //\n    var libraryComments = `(${process.platform}; ${process.arch})`\n    var libraryAgent = `UOS ${libraryComments} uos-js/${Package.version}`\n    // User agent block ends.\n\n    this.transport = transport\n    this.host = host\n    this.port = port\n    this.protocol = protocol\n    this.accessKey = params.accessKey\n    this.secretKey = params.secretKey\n    this.sessionToken = params.sessionToken\n    this.userAgent = `${libraryAgent}`\n\n    // Default path style is true\n    if (params.pathStyle === undefined) {\n      this.pathStyle = true\n    } else {\n      this.pathStyle = params.pathStyle\n    }\n\n    if (!this.accessKey) this.accessKey = ''\n    if (!this.secretKey) this.secretKey = ''\n    this.anonymous = !this.accessKey || !this.secretKey\n\n    this.regionMap = {}\n    if (params.region) {\n      this.region = params.region\n    }\n\n    this.partSize = 64*1024*1024\n    if (params.partSize) {\n      this.partSize = params.partSize\n      this.overRidePartSize = true\n    }\n    if (this.partSize < 5*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be greater than 5MB`)\n    }\n    if (this.partSize > 5*1024*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be less than 5GB`)\n    }\n\n    this.maximumPartSize = 5*1024*1024*1024\n    this.maxObjectSize = 5*1024*1024*1024*1024\n    // SHA256 is enabled only for authenticated http requests. If the request is authenticated\n    // and the connection is https we use x-amz-content-sha256=UNSIGNED-PAYLOAD\n    // header for signature calculation.\n    this.enableSHA256 = !this.anonymous && !params.useSSL\n\n    this.s3AccelerateEndpoint = ( params.s3AccelerateEndpoint || null )\n    this.reqOptions = {}\n  }\n\n  //This is s3 Specific and does not hold validity in any other Object storage.\n  getAccelerateEndPointIfSet(bucketName, objectName){\n    if (!_.isEmpty(this.s3AccelerateEndpoint)  && !_.isEmpty(bucketName)  && !_.isEmpty(objectName) ) {\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      // Disable transfer acceleration for non-compliant bucket names.\n      if (bucketName.indexOf(\".\")!== -1) {\n        throw new Error(`Transfer Acceleration is not supported for non compliant bucket:${bucketName}`)\n      }\n      // If transfer acceleration is requested set new host.\n      // For more details about enabling transfer acceleration read here.\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      return this.s3AccelerateEndpoint\n    }\n    return  false\n  }\n\n  /**\n   * @param endPoint _string_ valid S3 acceleration end point\n   */\n  setS3TransferAccelerate(endPoint){\n    this.s3AccelerateEndpoint = endPoint\n  }\n\n  // Sets the supported request options.\n  setRequestOptions(options) {\n    if (!isObject(options)) {\n      throw new TypeError('request options should be of type \"object\"')\n    }\n    this.reqOptions = _.pick(options, ['agent', 'ca', 'cert', 'ciphers', 'clientCertEngine', 'crl', 'dhparam', 'ecdhCurve', 'family', 'honorCipherOrder', 'key', 'passphrase', 'pfx', 'rejectUnauthorized', 'secureOptions', 'secureProtocol', 'servername', 'sessionIdContext'])\n  }\n\n  // returns *options* object that can be used with http.request()\n  // Takes care of constructing virtual-host-style or path-style hostname\n  getRequestOptions(opts) {\n    var method = opts.method\n    var region = opts.region\n    var bucketName = opts.bucketName\n    var objectName = opts.objectName\n    var headers = opts.headers\n    var query = opts.query\n\n    var reqOptions = {method}\n    reqOptions.headers = {}\n\n    // Verify if virtual host supported.\n    var virtualHostStyle\n    if (bucketName) {\n      virtualHostStyle = isVirtualHostStyle(this.host, this.protocol, bucketName, this.pathStyle)\n    }\n\n    if (this.port) reqOptions.port = this.port\n    reqOptions.protocol = this.protocol\n\n    if (objectName) {\n      objectName = `${uriResourceEscape(objectName)}`\n    }\n\n    reqOptions.path = '/'\n\n    // Save host.\n    reqOptions.host = this.host\n    // For Amazon S3 endpoint, get endpoint based on region.\n    if (isAmazonEndpoint(reqOptions.host)) {\n      const accelerateEndPoint = this.getAccelerateEndPointIfSet(bucketName, objectName)\n      if (accelerateEndPoint ) {\n        reqOptions.host = `${accelerateEndPoint}`\n      }else {\n        reqOptions.host = getS3Endpoint(region)\n      }\n    }\n\n    if (virtualHostStyle && !opts.pathStyle) {\n      // For all hosts which support virtual host style, `bucketName`\n      // is part of the hostname in the following format:\n      //\n      //  var host = 'bucketName.example.com'\n      //\n      if (bucketName) reqOptions.host = `${bucketName}.${reqOptions.host}`\n      if (objectName) reqOptions.path = `/${objectName}`\n    } else {\n      // For all S3 compatible storage services we will fallback to\n      // path style requests, where `bucketName` is part of the URI\n      // path.\n      if (bucketName) reqOptions.path = `/${bucketName}`\n      if (objectName) reqOptions.path = `/${bucketName}/${objectName}`\n    }\n\n    if (query) reqOptions.path += `?${query}`\n    reqOptions.headers.host = reqOptions.host\n    if ((reqOptions.protocol === 'http:' && reqOptions.port !== 80) ||\n        (reqOptions.protocol === 'https:' && reqOptions.port !== 443)) {\n      reqOptions.headers.host = `${reqOptions.host}:${reqOptions.port}`\n    }\n    reqOptions.headers['user-agent'] = this.userAgent\n    if (headers) {\n      // have all header keys in lower case - to make signing easy\n      _.map(headers, (v, k) => reqOptions.headers[k.toLowerCase()] = v)\n    }\n\n    // Use any request option specified in minioClient.setRequestOptions()\n    reqOptions = Object.assign({}, this.reqOptions, reqOptions)\n\n    return reqOptions\n  }\n\n  // Set application specific information.\n  //\n  // Generates User-Agent in the following style.\n  //\n  //       UOS (OS; ARCH) LIB/VER APP/VER\n  //\n  // __Arguments__\n  // * `appName` _string_ - Application name.\n  // * `appVersion` _string_ - Application version.\n  setAppInfo(appName, appVersion) {\n    if (!isString(appName)) {\n      throw new TypeError(`Invalid appName: ${appName}`)\n    }\n    if (appName.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appName cannot be empty.')\n    }\n    if (!isString(appVersion)) {\n      throw new TypeError(`Invalid appVersion: ${appVersion}`)\n    }\n    if (appVersion.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appVersion cannot be empty.')\n    }\n    this.userAgent = `${this.userAgent} ${appName}/${appVersion}`\n  }\n\n  // Calculate part size given the object size. Part size will be atleast this.partSize\n  calculatePartSize(size) {\n    if (!isNumber(size)) {\n      throw new TypeError('size should be of type \"number\"')\n    }\n    if (size > this.maxObjectSize) {\n      throw new TypeError(`size should not be more than ${this.maxObjectSize}`)\n    }\n    if (this.overRidePartSize) {\n      return this.partSize\n    }\n    var partSize = this.partSize\n    for (;;) { \t\t\t// while(true) {...} throws linting error.\n      // If partSize is big enough to accomodate the object size, then use it.\n      if ((partSize * 10000) > size) {\n        return partSize\n      }\n      // Try part sizes as 64MB, 80MB, 96MB etc.\n      partSize += 16*1024*1024\n    }\n  }\n\n  // log the request, response, error\n  logHTTP(reqOptions, response, err) {\n    // if no logstreamer available return.\n    if (!this.logStream) return\n    if (!isObject(reqOptions)) {\n      throw new TypeError('reqOptions should be of type \"object\"')\n    }\n    if (response && !isReadableStream(response)) {\n      throw new TypeError('response should be of type \"Stream\"')\n    }\n    if (err && !(err instanceof Error)) {\n      throw new TypeError('err should be of type \"Error\"')\n    }\n    var logHeaders = (headers) => {\n      _.forEach(headers, (v, k) => {\n        if (k == 'authorization') {\n          var redacter = new RegExp('Signature=([0-9a-f]+)')\n          v = v.replace(redacter, 'Signature=**REDACTED**')\n        }\n        this.logStream.write(`${k}: ${v}\\n`)\n      })\n      this.logStream.write('\\n')\n    }\n    this.logStream.write(`REQUEST: ${reqOptions.method} ${reqOptions.path}\\n`)\n    logHeaders(reqOptions.headers)\n    if (response) {\n      this.logStream.write(`RESPONSE: ${response.statusCode}\\n`)\n      logHeaders(response.headers)\n    }\n    if (err) {\n      this.logStream.write('ERROR BODY:\\n')\n      var errJSON = JSON.stringify(err, null, '\\t')\n      this.logStream.write(`${errJSON}\\n`)\n    }\n  }\n\n  // Enable tracing\n  traceOn(stream) {\n    if (!stream) stream = process.stdout\n    this.logStream = stream\n  }\n\n  // Disable tracing\n  traceOff() {\n    this.logStream = null\n  }\n\n  // makeRequest is the primitive used by the apis for making S3 requests.\n  // payload can be empty string in case of no payload.\n  // statusCode is the expected statusCode. If response.statusCode does not match\n  // we parse the XML error and call the callback with the error message.\n  // A valid region is passed by the calls - listBuckets, makeBucket and\n  // getBucketRegion.\n  makeRequest(options, payload, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isString(payload) && !isObject(payload)) {\n      // Buffer is of type 'object'\n      throw new TypeError('payload should be of type \"string\" or \"Buffer\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!options.headers) options.headers = {}\n    if (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE') {\n      options.headers['content-length'] = payload.length\n    }\n    var sha256sum = ''\n    if (this.enableSHA256) sha256sum = toSha256(payload)\n    var stream = readableStream(payload)\n    this.makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb)\n  }\n\n  // makeRequestStream will be used directly instead of makeRequest in case the payload\n  // is available as a stream. for ex. putObject\n  makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isReadableStream(stream)) {\n      throw new errors.InvalidArgumentError('stream should be a readable Stream')\n    }\n    if (!isString(sha256sum)) {\n      throw new TypeError('sha256sum should be of type \"string\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // sha256sum will be empty for anonymous or https requests\n    if (!this.enableSHA256 && sha256sum.length !== 0) {\n      throw new errors.InvalidArgumentError(`sha256sum expected to be empty for anonymous or https requests`)\n    }\n    // sha256sum should be valid for non-anonymous http requests.\n    if (this.enableSHA256 && sha256sum.length !== 64) {\n      throw new errors.InvalidArgumentError(`Invalid sha256sum : ${sha256sum}`)\n    }\n\n    var _makeRequest = (e, region) => {\n      if (e) return cb(e)\n      options.region = region\n      var reqOptions = this.getRequestOptions(options)\n      if (!this.anonymous) {\n        // For non-anonymous https requests sha256sum is 'UNSIGNED-PAYLOAD' for signature calculation.\n        if (!this.enableSHA256) sha256sum = 'UNSIGNED-PAYLOAD'\n\n        let date = new Date()\n\n        reqOptions.headers['x-amz-date'] = makeDateLong(date)\n        reqOptions.headers['x-amz-content-sha256'] = sha256sum\n        if (this.sessionToken) {\n          reqOptions.headers['x-amz-security-token'] = this.sessionToken\n        }\n\n        var authorization = signV4(reqOptions, this.accessKey, this.secretKey, region, date)\n        reqOptions.headers.authorization = authorization\n      }\n      var req = this.transport.request(reqOptions, response => {\n        if (statusCode !== response.statusCode) {\n          // For an incorrect region, S3 server always sends back 400.\n          // But we will do cache invalidation for all errors so that,\n          // in future, if AWS S3 decides to send a different status code or\n          // XML error code we will still work fine.\n          delete(this.regionMap[options.bucketName])\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, errorTransformer)\n            .on('error', e => {\n              this.logHTTP(reqOptions, response, e)\n              cb(e)\n            })\n          return\n        }\n        this.logHTTP(reqOptions, response)\n        if (returnResponse) return cb(null, response)\n        // We drain the socket so that the connection gets closed. Note that this\n        // is not expensive as the socket will not have any data.\n        response.on('data', ()=>{})\n        cb(null)\n      })\n      let pipe = pipesetup(stream, req)\n      pipe.on('error', e => {\n        this.logHTTP(reqOptions, null, e)\n        cb(e)\n      })\n    }\n    if (region) return _makeRequest(null, region)\n    this.getBucketRegion(options.bucketName, _makeRequest)\n  }\n\n  // gets the region of the bucket\n  getBucketRegion(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    // Region is set with constructor, return the region right here.\n    if (this.region) return cb(null, this.region)\n\n    if (this.regionMap[bucketName]) return cb(null, this.regionMap[bucketName])\n    var extractRegion = (response) => {\n      var transformer = transformers.getBucketRegionTransformer()\n      var region = 'us-east-1'\n      pipesetup(response, transformer)\n        .on('error', cb)\n        .on('data', data => {\n          if (data) region = data\n        })\n        .on('end', () => {\n          this.regionMap[bucketName] = region\n          cb(null, region)\n        })\n    }\n\n    var method = 'GET'\n    var query = 'location'\n\n    // `getBucketLocation` behaves differently in following ways for\n    // different environments.\n    //\n    // - For nodejs env we default to path style requests.\n    // - For browser env path style requests on buckets yields CORS\n    //   error. To circumvent this problem we make a virtual host\n    //   style request signed with 'us-east-1'. This request fails\n    //   with an error 'AuthorizationHeaderMalformed', additionally\n    //   the error XML also provides Region of the bucket. To validate\n    //   this region is proper we retry the same request with the newly\n    //   obtained region.\n    var pathStyle = this.pathStyle && typeof window === 'undefined'\n\n    this.makeRequest({method, bucketName, query, pathStyle}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) {\n        if (e.name === 'AuthorizationHeaderMalformed') {\n          var region = e.Region\n          if (!region) return cb(e)\n          this.makeRequest({method, bucketName, query}, '', 200, region, true, (e, response) => {\n            if (e) return cb(e)\n            extractRegion(response)\n          })\n          return\n        }\n        return cb(e)\n      }\n      extractRegion(response)\n    })\n  }\n\n  // Creates the bucket `bucketName`.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ - Name of the bucket\n  // * `region` _string_ - region valid values are _us-west-1_, _us-west-2_,  _eu-west-1_, _eu-central-1_, _ap-southeast-1_, _ap-northeast-1_, _ap-southeast-2_, _sa-east-1_.\n  // * `makeOpts` _object_ - Options to create a bucket. e.g {ObjectLocking:true} (Optional)\n  // * `callback(err)` _function_ - callback function with `err` as the error argument. `err` is null if the bucket is successfully created.\n  makeBucket(bucketName, region, makeOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    //Backward Compatibility\n    if(isObject(region)){\n      cb= makeOpts\n      makeOpts=region\n      region = ''\n    }\n    if (isFunction(region)) {\n      cb = region\n      region = ''\n      makeOpts={}\n    }\n    if(isFunction(makeOpts)){\n      cb=makeOpts\n      makeOpts={}\n    }\n\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isObject(makeOpts)) {\n      throw new TypeError('makeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var payload = ''\n\n    // Region already set in constructor, validate if\n    // caller requested bucket location is same.\n    if (region && this.region) {\n      if (region !== this.region) {\n        throw new errors.InvalidArgumentError(`Configured region ${this.region}, requested ${region}`)\n      }\n    }\n\n    // sending makeBucket request with XML containing 'us-east-1' fails. For\n    // default region server expects the request without body\n    if (region && region !== 'us-east-1') {\n      var createBucketConfiguration = []\n      createBucketConfiguration.push({\n        _attr: {\n          xmlns: 'http://s3.amazonaws.com/doc/2006-03-01/'\n        }\n      })\n      createBucketConfiguration.push({\n        LocationConstraint: region\n      })\n      var payloadObject = {\n        CreateBucketConfiguration: createBucketConfiguration\n      }\n      payload = Xml(payloadObject)\n    }\n    var method = 'PUT'\n    var headers = {}\n\n    if(makeOpts.ObjectLocking){\n      headers[\"x-amz-bucket-object-lock-enabled\"]=true\n    }\n\n    if (!region) region = 'us-east-1'\n    this.makeRequest({method, bucketName, headers}, payload, 200, region, false, cb)\n  }\n\n  // List of buckets created.\n  //\n  // __Arguments__\n  // * `callback(err, buckets)` _function_ - callback function with error as the first argument. `buckets` is an array of bucket information\n  //\n  // `buckets` array element:\n  // * `bucket.name` _string_ : bucket name\n  // * `bucket.creationDate` _Date_: date when bucket was created\n  listBuckets(cb) {\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    this.makeRequest({method}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListBucketTransformer()\n      var buckets\n      pipesetup(response, transformer)\n        .on('data', result => buckets = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, buckets))\n    })\n  }\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded (optional, default `''`)\n  // * `recursive` _bool_: directory style listing when false, recursive listing when true (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucket)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucket)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    var delimiter = recursive ? '' : '/'\n    var keyMarker = ''\n    var uploadIdMarker = ''\n    var uploads = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one upload info per _read()\n      if (uploads.length) {\n        return readStream.push(uploads.shift())\n      }\n      if (ended) return readStream.push(null)\n      this.listIncompleteUploadsQuery(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => uploads.push(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            // for each incomplete upload add the sizes of its uploaded parts\n            this.listParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              uploads.push(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              readStream.emit('error', err)\n              return\n            }\n            if (result.isTruncated) {\n              keyMarker = result.nextKeyMarker\n              uploadIdMarker = result.nextUploadIdMarker\n            } else {\n              ended = true\n            }\n            readStream._read()\n          })\n        })\n    }\n    return readStream\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName}, '', 200, '', false, err => {\n      if (err) {\n        if (err.code == 'NoSuchBucket' || err.code == 'NotFound') return cb(null, false)\n        return cb(err)\n      }\n      cb(null, true)\n    })\n  }\n\n  // Remove a bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket is removed successfully.\n  removeBucket(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'DELETE'\n    this.makeRequest({method, bucketName}, '', 204, '', false, (e) => {\n      // If the bucket was successfully removed, remove the region map entry.\n      if (!e) delete(this.regionMap[bucketName])\n      cb(e)\n    })\n  }\n\n  // Remove the partially uploaded object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeIncompleteUpload(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.isValidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var removeUploadId\n    async.during(\n      cb => {\n        this.findUploadId(bucketName, objectName, (e, uploadId) => {\n          if (e) return cb(e)\n          removeUploadId = uploadId\n          cb(null, uploadId)\n        })\n      },\n      cb => {\n        var method = 'DELETE'\n        var query = `uploadId=${removeUploadId}`\n        this.makeRequest({method, bucketName, objectName, query}, '', 204, '', false, e => cb(e))\n      },\n      cb\n    )\n  }\n\n  // Callback is called with `error` in case of error or `null` in case of success\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: path to which the object data will be written to\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback is called with `err` in case of error.\n  fGetObject(bucketName, objectName, filePath, getOpts={}, cb) {\n    // Input validation.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // Internal data.\n    var partFile\n    var partFileStream\n    var objStat\n\n    // Rename wrapper.\n    var rename = err => {\n      if (err) return cb(err)\n      fs.rename(partFile, filePath, cb)\n    }\n\n    async.waterfall([\n      cb => this.statObject(bucketName, objectName, getOpts, cb),\n      (result, cb) => {\n        objStat = result\n        // Create any missing top level directories.\n        mkdirp(path.dirname(filePath), cb)\n      },\n      (ignore, cb) => {\n        partFile = `${filePath}.${objStat.etag}.part.minio`\n        fs.stat(partFile, (e, stats) => {\n          var offset = 0\n          if (e) {\n            partFileStream = fs.createWriteStream(partFile, {flags: 'w'})\n          } else {\n            if (objStat.size === stats.size) return rename()\n            offset = stats.size\n            partFileStream = fs.createWriteStream(partFile, {flags: 'a'})\n          }\n          this.getPartialObject(bucketName, objectName, offset, 0, getOpts, cb)\n        })\n      },\n      (downloadStream, cb) => {\n        pipesetup(downloadStream, partFileStream)\n          .on('error', e => cb(e))\n          .on('finish', cb)\n      },\n      cb => fs.stat(partFile, cb),\n      (stats, cb) => {\n        if (stats.size === objStat.size) return cb()\n        cb(new Error('Size mismatch between downloaded file and the object'))\n      }\n    ], rename)\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, getOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, getOpts, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream (optional, if not specified we read the rest of the file from the offset)\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, getOpts={}, cb) {\n    if (isFunction(length)) {\n      cb = length\n      length = 0\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isNumber(offset)) {\n      throw new TypeError('offset should be of type \"number\"')\n    }\n    if (!isNumber(length)) {\n      throw new TypeError('length should be of type \"number\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.range = range\n    }\n\n    var expectedStatus = 200\n    if (range) {\n      expectedStatus = 206\n    }\n    var method = 'GET'\n\n    var query = querystring.stringify(getOpts)\n    this.makeRequest({method, bucketName, objectName, headers, query}, '', expectedStatus, '', true, cb)\n  }\n\n  // Uploads the object using contents from a file\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: file path of the file to be uploaded\n  // * `metaData` _Javascript Object_: metaData assosciated with the object\n  // * `callback(err, objInfo)` _function_: non null `err` indicates error, `objInfo` _object_ which contains versionId and etag.\n  fPutObject(bucketName, objectName, filePath, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {} // Set metaData empty if no metaData provided.\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metaData should be of type \"object\"')\n    }\n\n    // Inserts correct `content-type` attribute based on metaData and filePath\n    metaData = insertContentType(metaData, filePath)\n\n    //Updates metaData to have the correct prefix if needed\n    metaData = prependXAMZMeta(metaData)\n    var size\n    var partSize\n\n    async.waterfall([\n      cb => fs.stat(filePath, cb),\n      (stats, cb) => {\n        size = stats.size\n        if (size > this.maxObjectSize) {\n          return cb(new Error(`${filePath} size : ${stats.size}, max allowed size : 5TB`))\n        }\n        if (size <= this.partSize) {\n          // simple PUT request, no multipart\n          var multipart = false\n          var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n          var hash = transformers.getHashSummer(this.enableSHA256)\n          var start = 0\n          var end = size - 1\n          var autoClose = true\n          if (size === 0) end = 0\n          var options = {start, end, autoClose}\n          pipesetup(fs.createReadStream(filePath, options), hash)\n            .on('data', data => {\n              var md5sum = data.md5sum\n              var sha256sum = data.sha256sum\n              var stream = fs.createReadStream(filePath, options)\n              uploader(stream, size, sha256sum, md5sum, (err, objInfo) => {\n                callback(err, objInfo)\n                cb(true)\n              })\n            })\n            .on('error', e => cb(e))\n          return\n        }\n        this.findUploadId(bucketName, objectName, cb)\n      },\n      (uploadId, cb) => {\n        // if there was a previous incomplete upload, fetch all its uploaded parts info\n        if (uploadId) return this.listParts(bucketName, objectName, uploadId,  (e, etags) =>  cb(e, uploadId, etags))\n        // there was no previous upload, initiate a new one\n        this.initiateNewMultipartUpload(bucketName, objectName, metaData, (e, uploadId) => cb(e, uploadId, []))\n      },\n      (uploadId, etags, cb) => {\n        partSize = this.calculatePartSize(size)\n        var multipart = true\n        var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n\n        // convert array to object to make things easy\n        var parts = etags.reduce(function(acc, item) {\n          if (!acc[item.part]) {\n            acc[item.part] = item\n          }\n          return acc\n        }, {})\n        var partsDone = []\n        var partNumber = 1\n        var uploadedSize = 0\n        async.whilst(\n          cb => { cb(null, uploadedSize < size) },\n          cb => {\n            var part = parts[partNumber]\n            var hash = transformers.getHashSummer(this.enableSHA256)\n            var length = partSize\n            if (length > (size - uploadedSize)) {\n              length = size - uploadedSize\n            }\n            var start = uploadedSize\n            var end = uploadedSize + length - 1\n            var autoClose = true\n            var options = {autoClose, start, end}\n            // verify md5sum of each part\n            pipesetup(fs.createReadStream(filePath, options), hash)\n              .on('data', data => {\n                var md5sumHex = (Buffer.from(data.md5sum, 'base64')).toString('hex')\n                if (part && (md5sumHex === part.etag)) {\n                  //md5 matches, chunk already uploaded\n                  partsDone.push({part: partNumber, etag: part.etag})\n                  partNumber++\n                  uploadedSize += length\n                  return cb()\n                }\n                // part is not uploaded yet, or md5 mismatch\n                var stream = fs.createReadStream(filePath, options)\n                uploader(uploadId, partNumber, stream, length,\n                         data.sha256sum, data.md5sum, (e, objInfo) => {\n                           if (e) return cb(e)\n                           partsDone.push({part: partNumber, etag: objInfo.etag})\n                           partNumber++\n                           uploadedSize += length\n                           return cb()\n                         })\n              })\n              .on('error', e => cb(e))\n          },\n          e => {\n            if (e) return cb(e)\n            cb(null, partsDone, uploadId)\n          }\n        )\n      },\n      // all parts uploaded, complete the multipart upload\n      (etags, uploadId, cb) => this.completeMultipartUpload(bucketName, objectName, uploadId, etags, cb)\n    ], (err, ...rest) => {\n      if (err === true) return\n      callback(err, ...rest)\n    })\n  }\n\n  // Uploads the object.\n  //\n  // Uploading a stream\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `stream` _Stream_: Readable stream\n  // * `size` _number_: size of the object (optional)\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  //\n  // Uploading \"Buffer\" or \"string\"\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `string or Buffer` _string_ or _Buffer_: string or buffer\n  // * `callback(err, objInfo)` _function_: `err` is `null` in case of success and `info` will have the following object details:\n  //   * `etag` _string_: etag of the object\n  //   * `versionId` _string_: versionId of the object\n  putObject(bucketName, objectName, stream, size, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    // We'll need to shift arguments to the left because of size and metaData.\n    if (isFunction(size)) {\n      callback = size\n      metaData = {}\n    } else if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {}\n    }\n\n    // We'll need to shift arguments to the left because of metaData\n    // and size being optional.\n    if (isObject(size)) {\n      metaData = size\n    }\n\n    //Ensures Metadata has appropriate prefix for A3 API\n    metaData = prependXAMZMeta(metaData)\n    if (typeof stream === 'string' || stream instanceof Buffer) {\n      // Adapts the non-stream interface into a stream.\n      size = stream.length\n      stream = readableStream(stream)\n    } else if (!isReadableStream(stream)) {\n      throw new TypeError('third argument should be of type \"stream.Readable\" or \"Buffer\" or \"string\"')\n    }\n\n    if (!isFunction(callback)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if (isNumber(size) && size < 0) {\n      throw new errors.InvalidArgumentError(`size cannot be negative, given size: ${size}`)\n    }\n\n    // Get the part size and forward that to the BlockStream. Default to the\n    // largest block size possible if necessary.\n    if (!isNumber(size))\n      size = this.maxObjectSize\n\n    size = this.calculatePartSize(size)\n\n    // s3 requires that all non-end chunks be at least `this.partSize`,\n    // so we chunk the stream until we hit either that size or the end before\n    // we flush it to s3.\n    let chunker = new BlockStream2({size, zeroPadding: false})\n\n    // This is a Writable stream that can be written to in order to upload\n    // to the specified bucket and object automatically.\n    let uploader = new ObjectUploader(this, bucketName, objectName, size, metaData, callback)\n    // stream => chunker => uploader\n    stream.pipe(chunker).pipe(uploader)\n  }\n\n  // Copy the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `srcObject` _string_: path of the source object to be copied\n  // * `conditions` _CopyConditions_: copy conditions that needs to be satisfied (optional, default `null`)\n  // * `callback(err, {etag, lastModified})` _function_: non null `err` indicates error, `etag` _string_ and `listModifed` _Date_ are respectively the etag and the last modified date of the newly copied object\n  copyObject(arg1, arg2, arg3, arg4, arg5) {\n    var bucketName = arg1\n    var objectName = arg2\n    var srcObject = arg3\n    var conditions, cb\n    if (typeof arg4 == 'function' && arg5 === undefined) {\n      conditions = null\n      cb = arg4\n    } else {\n      conditions = arg4\n      cb = arg5\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(srcObject)) {\n      throw new TypeError('srcObject should be of type \"string\"')\n    }\n    if (srcObject === \"\") {\n      throw new errors.InvalidPrefixError(`Empty source prefix`)\n    }\n\n    if (conditions !== null && !(conditions instanceof CopyConditions)) {\n      throw new TypeError('conditions should be of type \"CopyConditions\"')\n    }\n\n    var headers = {}\n    headers['x-amz-copy-source'] = uriEscape(srcObject)\n\n    if (conditions !== null) {\n      if (conditions.modified !== \"\") {\n        headers['x-amz-copy-source-if-modified-since'] = conditions.modified\n      }\n      if (conditions.unmodified !== \"\") {\n        headers['x-amz-copy-source-if-unmodified-since'] = conditions.unmodified\n      }\n      if (conditions.matchETag !== \"\") {\n        headers['x-amz-copy-source-if-match'] = conditions.matchETag\n      }\n      if (conditions.matchEtagExcept !== \"\") {\n        headers['x-amz-copy-source-if-none-match'] = conditions.matchETagExcept\n      }\n    }\n\n    var method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // list a batch of objects\n  listObjectsQuery(bucketName, prefix, marker, listQueryOpts={}) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(marker)) {\n      throw new TypeError('marker should be of type \"string\"')\n    }\n    let{\n      Delimiter,\n      MaxKeys,\n      IncludeVersion,\n    } = listQueryOpts\n\n    if (!isObject(listQueryOpts)) {\n      throw new TypeError('listQueryOpts should be of type \"object\"')\n    }\n   \n    if (!isString(Delimiter)) {\n      throw new TypeError('Delimiter should be of type \"string\"')\n    }\n\n    if (!isNumber(MaxKeys)) {\n      throw new TypeError('MaxKeys should be of type \"number\"')\n    }\n\n    const queries = []\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(Delimiter)}`)\n\n    if (IncludeVersion) {\n      queries.push(`versions`)\n    }\n\n    if (marker) {\n      marker = uriEscape(marker)\n      if (IncludeVersion) {\n        queries.push(`key-marker=${marker}`)\n      } else {\n        queries.push(`marker=${marker}`)\n      }\n    }\n\n    // no need to escape maxKeys\n    if (MaxKeys) {\n      if (MaxKeys >= 1000) {\n        MaxKeys = 1000\n      }\n      queries.push(`max-keys=${MaxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n\n    var method = 'GET'\n    var transformer = transformers.getListObjectsTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `listOpts _object_: query params to list object with below keys\n  // *    listOpts.MaxKeys _int_ maximum number of keys to return\n  // *    listOpts.IncludeVersion  _bool_ true|false to include versions.\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  // * `obj.name` _string_: name of the object\n  // * `obj.prefix` _string_: name of the object prefix\n  // * `obj.size` _number_: size of the object\n  // * `obj.etag` _string_: etag of the object\n  // * `obj.lastModified` _Date_: modified time stamp\n  // * `obj.isDeleteMarker` _boolean_: true if it is a delete marker\n  // * `obj.versionId` _string_: versionId of the object\n  listObjects(bucketName, prefix, recursive, listOpts={}) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isObject(listOpts)) {\n      throw new TypeError('listOpts should be of type \"object\"')\n    }\n    var marker = ''\n    const listQueryOpts={\n      Delimiter:recursive ? '' : '/', // if recursive is false set delimiter to '/'\n      MaxKeys: 1000,\n      IncludeVersion:listOpts.IncludeVersion,\n    }\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsQuery(bucketName, prefix, marker, listQueryOpts)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            marker = result.nextMarker || result.versionIdMarker\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // listObjectsV2Query - (List Objects V2) - List some or all (up to 1000) of the objects in a bucket.\n  //\n  // You can use the request parameters as selection criteria to return a subset of the objects in a bucket.\n  // request parameters :-\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: Limits the response to keys that begin with the specified prefix.\n  // * `continuation-token` _string_: Used to continue iterating over a set of objects.\n  // * `delimiter` _string_: A delimiter is a character you use to group keys.\n  // * `max-keys` _number_: Sets the maximum number of keys returned in the response body.\n  // * `start-after` _string_: Specifies the key to start after when listing objects in a bucket.\n  listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, maxKeys, startAfter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(continuationToken)) {\n      throw new TypeError('continuationToken should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    var queries = []\n\n    // Call for listing objects v2 API\n    queries.push(`list-type=2`)\n\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (continuationToken) {\n      continuationToken = uriEscape(continuationToken)\n      queries.push(`continuation-token=${continuationToken}`)\n    }\n    // Set start-after\n    if (startAfter) {\n      startAfter = uriEscape(startAfter)\n      queries.push(`start-after=${startAfter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListObjectsV2Transformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket using S3 ListObjects V2\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `startAfter` _string_: Specifies the key to start after when listing objects in a bucket. (optional, default `''`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `obj.name` _string_: name of the object\n  //   * `obj.prefix` _string_: name of the object prefix\n  //   * `obj.size` _number_: size of the object\n  //   * `obj.etag` _string_: etag of the object\n  //   * `obj.lastModified` _Date_: modified time stamp\n  listObjectsV2(bucketName, prefix, recursive, startAfter) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (startAfter === undefined) startAfter = ''\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var continuationToken = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, 1000, startAfter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            continuationToken = result.nextContinuationToken\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `statOpts`  _object_ : Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional).\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.metaData` _string_: MetaData of the object\n  //   * `stat.lastModified` _Date_: modified time stamp\n  //   * `stat.versionId` _string_: version id of the object if available\n  statObject(bucketName, objectName, statOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(statOpts)) {\n      cb = statOpts\n      statOpts={}\n    }\n\n    if(!isObject(statOpts)){\n      throw new errors.InvalidArgumentError('statOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var query = querystring.stringify(statOpts)\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName, objectName, query},'' ,200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      // We drain the socket so that the connection gets closed. Note that this\n      // is not expensive as the socket will not have any data.\n      response.on('data', ()=>{})\n\n      const result = {\n        size: +response.headers['content-length'],\n        metaData: extractMetadata(response.headers),\n        lastModified: new Date(response.headers['last-modified']),\n        versionId:getVersionId(response.headers),\n        etag:sanitizeETag(response.headers.etag)\n      }\n\n      cb(null, result)\n    })\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `removeOpts` _object_: Version of the object in the form `{versionId:'my-uuid', governanceBypass:true|false}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, removeOpts={} , cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(removeOpts)) {\n      cb = removeOpts\n      removeOpts={}\n    }\n\n    if(!isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const queryParams = {}\n\n    if(removeOpts.versionId){\n      queryParams.versionId=`${removeOpts.versionId}`\n    }\n    const headers = {}\n    if(removeOpts.governanceBypass){\n      headers[\"X-Amz-Bypass-Governance-Retention\"]=true\n    }\n\n    const query = querystring.stringify( queryParams )\n\n    let requestOptions = {method, bucketName, objectName, headers}\n    if(query){\n      requestOptions['query']=query\n    }\n\n    this.makeRequest(requestOptions, '', 204, '', false, cb)\n  }\n\n  // Remove all the objects residing in the objectsList.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectsList` _array_: array of objects of one of the following:\n  // *         List of Object names as array of strings which are object keys:  ['objectname1','objectname2']\n  // *         List of Object name and versionId as an object:  [{name:\"objectname\",versionId:\"my-version-id\"}]\n\n  removeObjects(bucketName, objectsList, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isArray(objectsList)) {\n      throw new errors.InvalidArgumentError('objectsList should be a list')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const maxEntries = 1000\n    const query = 'delete'\n    const method = 'POST'\n\n    let result = objectsList.reduce((result, entry) => {\n      result.list.push(entry)\n      if (result.list.length === maxEntries) {\n        result.listOfList.push(result.list)\n        result.list = []\n      }\n      return result\n    }, {listOfList: [], list:[]})\n\n    if (result.list.length > 0) {\n      result.listOfList.push(result.list)\n    }\n\n    const encoder = new TextEncoder()\n\n    async.eachSeries(result.listOfList, (list, callback) => {\n      var deleteObjects={\"Delete\":[{Quiet:true}], }\n      list.forEach(function(value){\n        //Backward Compatibility\n        let entry\n        if(isObject(value)){\n          entry={\"Object\": [{\"Key\": value.name,  \"VersionId\":value.versionId}]}\n        }else{\n          entry={\"Object\": [{\"Key\": value}]}\n        }\n\n        deleteObjects[\"Delete\"].push(entry)\n      })\n      const builder = new xml2js.Builder({ headless: true })\n      let payload = builder.buildObject(deleteObjects)\n      payload = encoder.encode(payload)\n      const headers = {}\n\n      headers['Content-MD5'] = toMd5(payload)\n\n      this.makeRequest({ method, bucketName, query, headers}, payload, 200, '', false, (e) => {\n        if (e) return callback(e)\n        callback(null)\n      })\n    }, cb)\n  }\n\n\n  // Get the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `callback(err, policy)` _function_: callback function\n  getBucketPolicy(bucketName, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'GET'\n    let query = 'policy'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let policy = Buffer.from('')\n      pipesetup(response, transformers.getConcater())\n        .on('data', data => policy = data)\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, policy.toString())\n        })\n    })\n  }\n\n  // Set the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `bucketPolicy` _string_: bucket policy (JSON stringify'ed)\n  // * `callback(err)` _function_: callback function\n  setBucketPolicy(bucketName, policy, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(policy)) {\n      throw new errors.InvalidBucketPolicyError(`Invalid bucket policy: ${policy} - must be \"string\"`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'DELETE'\n    let query = 'policy'\n\n    if (policy) {\n      method = 'PUT'\n    }\n\n    this.makeRequest({method, bucketName, query}, policy, 204, '', false, cb)\n  }\n\n  // Generate a generic presigned URL which can be\n  // used for HTTP methods GET, PUT, HEAD and DELETE\n  //\n  // __Arguments__\n  // * `method` _string_: name of the HTTP method\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `reqParams` _object_: request parameters (optional) e.g {versionId:\"10fa9946-3f64-4137-a58f-888065c0732e\"}\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned ' + method + ' url cannot be generated for anonymous requests')\n    }\n    if (isFunction(requestDate)) {\n      cb = requestDate\n      requestDate = new Date()\n    }\n    if (isFunction(reqParams)) {\n      cb = reqParams\n      reqParams = {}\n      requestDate = new Date()\n    }\n    if (isFunction(expires)) {\n      cb = expires\n      reqParams = {}\n      expires = 24 * 60 * 60 * 7 // 7 days in seconds\n      requestDate = new Date()\n    }\n    if (!isNumber(expires)) {\n      throw new TypeError('expires should be of type \"number\"')\n    }\n    if (!isObject(reqParams)) {\n      throw new TypeError('reqParams should be of type \"object\"')\n    }\n    if (!isValidDate(requestDate)) {\n      throw new TypeError('requestDate should be of type \"Date\" and valid')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var query = querystring.stringify(reqParams)\n    this.getBucketRegion(bucketName, (e, region) => {\n      if (e) return cb(e)\n      // This statement is added to ensure that we send error through\n      // callback on presign failure.\n      var url\n      var reqOptions = this.getRequestOptions({method,\n                                               region,\n                                               bucketName,\n                                               objectName,\n                                               query})\n      try {\n        url = presignSignatureV4(reqOptions, this.accessKey, this.secretKey,\n                                 this.sessionToken, region, requestDate, expires)\n      } catch (pe) {\n        return cb(pe)\n      }\n      cb(null, url)\n    })\n  }\n\n  // Generate a presigned URL for GET\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `respHeaders` _object_: response headers to override or request params for query (optional) e.g {versionId:\"10fa9946-3f64-4137-a58f-888065c0732e\"}\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedGetObject(bucketName, objectName, expires, respHeaders, requestDate, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (isFunction(respHeaders)) {\n      cb = respHeaders\n      respHeaders = {}\n      requestDate = new Date()\n    }\n\n    var validRespHeaders = ['response-content-type', 'response-content-language', 'response-expires', 'response-cache-control',\n                            'response-content-disposition', 'response-content-encoding']\n    validRespHeaders.forEach(header => {\n      if  (respHeaders !== undefined && respHeaders[header] !== undefined && !isString(respHeaders[header])) {\n        throw new TypeError(`response header ${header} should be of type \"string\"`)\n      }\n    })\n    return this.presignedUrl('GET', bucketName, objectName, expires, respHeaders, requestDate, cb)\n  }\n\n  // Generate a presigned URL for PUT. Using this URL, the browser can upload to S3 only with the specified object name.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  presignedPutObject(bucketName, objectName, expires, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ${bucketName}')\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError('Invalid object name: ${objectName}')\n    }\n    return this.presignedUrl('PUT', bucketName, objectName, expires, cb)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n  // presignedPostPolicy can be used in situations where we want more control on the upload than what\n  // presignedPutObject() provides. i.e Using presignedPostPolicy we will be able to put policy restrictions\n  // on the object's `name` `bucket` `expiry` `Content-Type`\n  presignedPostPolicy(postPolicy, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned POST policy cannot be generated for anonymous requests')\n    }\n    if (!isObject(postPolicy)) {\n      throw new TypeError('postPolicy should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    this.getBucketRegion(postPolicy.formData.bucket, (e, region) => {\n      if (e) return cb(e)\n      var date = new Date()\n      var dateStr = makeDateLong(date)\n\n      if (!postPolicy.policy.expiration) {\n        // 'expiration' is mandatory field for S3.\n        // Set default expiration date of 7 days.\n        var expires = new Date()\n        expires.setSeconds(24 * 60 * 60 * 7)\n        postPolicy.setExpires(expires)\n      }\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-date', dateStr])\n      postPolicy.formData['x-amz-date'] = dateStr\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-algorithm', 'AWS4-HMAC-SHA256'])\n      postPolicy.formData['x-amz-algorithm'] = 'AWS4-HMAC-SHA256'\n\n      postPolicy.policy.conditions.push([\"eq\", \"$x-amz-credential\", this.accessKey + \"/\" + getScope(region, date)])\n      postPolicy.formData['x-amz-credential'] = this.accessKey + \"/\" + getScope(region, date)\n\n      if (this.sessionToken) {\n        postPolicy.policy.conditions.push(['eq', '$x-amz-security-token', this.sessionToken])\n        postPolicy.formData['x-amz-security-token'] = this.sessionToken\n      }\n\n      var policyBase64 = Buffer.from(JSON.stringify(postPolicy.policy)).toString('base64')\n\n      postPolicy.formData.policy = policyBase64\n\n      var signature = postPresignSignatureV4(region, date, this.secretKey, policyBase64)\n\n      postPolicy.formData['x-amz-signature'] = signature\n      var opts = {}\n      opts.region = region\n      opts.bucketName = postPolicy.formData.bucket\n      var reqOptions = this.getRequestOptions(opts)\n      var portStr = (this.port == 80 || this.port === 443) ? '' : `:${this.port.toString()}`\n      var urlStr = `${reqOptions.protocol}//${reqOptions.host}${portStr}${reqOptions.path}`\n      cb(null, {postURL: urlStr,formData: postPolicy.formData})\n    })\n  }\n\n  // Calls implemented below are related to multipart.\n\n  // Initiate a new multipart upload.\n  initiateNewMultipartUpload(bucketName, objectName, metaData, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(metaData)) {\n      throw new errors.InvalidObjectNameError('contentType should be of type \"object\"')\n    }\n    var method = 'POST'\n    let headers = Object.assign({}, metaData)\n    var query = 'uploads'\n    this.makeRequest({method, bucketName, objectName, query, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getInitiateMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n  }\n\n  // Complete the multipart upload. After all the parts are uploaded issuing\n  // this call will aggregate the parts on the server into a single object.\n  completeMultipartUpload(bucketName, objectName, uploadId, etags, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isObject(etags)) {\n      throw new TypeError('etags should be of type \"Array\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n\n    var method = 'POST'\n    var query = `uploadId=${uriEscape(uploadId)}`\n\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {CompleteMultipartUpload: parts}\n    var payload = Xml(payloadObject)\n\n    this.makeRequest({method, bucketName, objectName, query}, payload, 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCompleteMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          if (result.errCode) {\n            // Multipart Complete API returns an error XML after a 200 http status\n            cb(new errors.S3Error(result.errMessage))\n          } else {\n            cb(null, result.etag)\n          }\n        })\n    })\n  }\n\n  // Get part-info of all parts of an incomplete upload specified by uploadId.\n  listParts(bucketName, objectName, uploadId, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var parts = []\n    var listNext = (marker) => {\n      this.listPartsQuery(bucketName, objectName, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  // Called by listParts to fetch a batch of part-info\n  listPartsQuery(bucketName, objectName, uploadId, marker, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isNumber(marker)) {\n      throw new TypeError('marker should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var query = ''\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uriEscape(uploadId)}`\n\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListPartsTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // Called by listIncompleteUploads to fetch a batch of incomplete uploads.\n  listIncompleteUploadsQuery(bucketName, prefix, keyMarker, uploadIdMarker, delimiter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(keyMarker)) {\n      throw new TypeError('keyMarker should be of type \"string\"')\n    }\n    if (!isString(uploadIdMarker)) {\n      throw new TypeError('uploadIdMarker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    var queries = []\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListMultipartTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // Find uploadId of an incomplete upload.\n  findUploadId(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    var latestUpload\n    var listNext = (keyMarker, uploadIdMarker) => {\n      this.listIncompleteUploadsQuery(bucketName, objectName, keyMarker, uploadIdMarker, '')\n        .on('error', e => cb(e))\n        .on('data', result => {\n          result.uploads.forEach(upload => {\n            if (upload.key === objectName) {\n              if (!latestUpload ||\n                (upload.initiated.getTime() > latestUpload.initiated.getTime())) {\n                latestUpload = upload\n                return\n              }\n            }\n          })\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          if (latestUpload) return cb(null, latestUpload.uploadId)\n          cb(null, undefined)\n        })\n    }\n    listNext('', '')\n  }\n\n  // Returns a function that can be used for uploading objects.\n  // If multipart === true, it returns function that is used to upload\n  // a part of the multipart.\n  getUploader(bucketName, objectName, metaData, multipart) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isBoolean(multipart)) {\n      throw new TypeError('multipart should be of type \"boolean\"')\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metadata should be of type \"object\"')\n    }\n\n    var validate = (stream, length, sha256sum, md5sum, cb) => {\n      if (!isReadableStream(stream)) {\n        throw new TypeError('stream should be of type \"Stream\"')\n      }\n      if (!isNumber(length)) {\n        throw new TypeError('length should be of type \"number\"')\n      }\n      if (!isString(sha256sum)) {\n        throw new TypeError('sha256sum should be of type \"string\"')\n      }\n      if (!isString(md5sum)) {\n        throw new TypeError('md5sum should be of type \"string\"')\n      }\n      if (!isFunction(cb)) {\n        throw new TypeError('callback should be of type \"function\"')\n      }\n    }\n    var simpleUploader = (...args) => {\n      validate(...args)\n      var query = ''\n      upload(query, ...args)\n    }\n    var multipartUploader = (uploadId, partNumber, ...rest) => {\n      if (!isString(uploadId)) {\n        throw new TypeError('uploadId should be of type \"string\"')\n      }\n      if (!isNumber(partNumber)) {\n        throw new TypeError('partNumber should be of type \"number\"')\n      }\n      if (!uploadId) {\n        throw new errors.InvalidArgumentError('Empty uploadId')\n      }\n      if (!partNumber) {\n        throw new errors.InvalidArgumentError('partNumber cannot be 0')\n      }\n      validate(...rest)\n      var query = `partNumber=${partNumber}&uploadId=${uriEscape(uploadId)}`\n      upload(query, ...rest)\n    }\n    var upload = (query, stream, length, sha256sum, md5sum, cb) => {\n      var method = 'PUT'\n      let headers = {'Content-Length': length}\n\n      if (!multipart) {\n        headers = Object.assign({}, metaData, headers)\n      }\n\n      if (!this.enableSHA256) headers['Content-MD5'] = md5sum\n      this.makeRequestStream({method, bucketName, objectName, query, headers},\n                             stream, sha256sum, 200, '', true, (e, response) => {\n                               if (e) return cb(e)\n                               const result = {\n                                 etag: sanitizeETag(response.headers.etag),\n                                 versionId:getVersionId(response.headers)\n                               }\n                               // Ignore the 'data' event so that the stream closes. (nodejs stream requirement)\n                               response.on('data', () => {})\n                               cb(null, result)\n                             })\n    }\n    if (multipart) {\n      return multipartUploader\n    }\n    return simpleUploader\n  }\n\n  // Remove all the notification configurations in the S3 provider\n  setBucketNotification(bucketName, config, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(config)) {\n      throw new TypeError('notification config should be of type \"Object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'PUT'\n    var query = 'notification'\n    var builder = new xml2js.Builder({rootName:'NotificationConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(config)\n    this.makeRequest({method, bucketName, query}, payload, 200, '', false, cb)\n  }\n\n  removeAllBucketNotification(bucketName, cb) {\n    this.setBucketNotification(bucketName, new NotificationConfig(), cb)\n  }\n\n  // Return the list of notification configurations stored\n  // in the S3 provider\n  getBucketNotification(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = 'notification'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getBucketNotificationTransformer()\n      var bucketNotification\n      pipesetup(response, transformer)\n        .on('data', result => bucketNotification = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, bucketNotification))\n    })\n  }\n\n  // Listens for bucket notifications. Returns an EventEmitter.\n  listenBucketNotification(bucketName, prefix, suffix, events) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix must be of type string')\n    }\n    if (!isString(suffix)) {\n      throw new TypeError('suffix must be of type string')\n    }\n    if (!isArray(events)) {\n      throw new TypeError('events must be of type Array')\n    }\n    let listener = new NotificationPoller(this, bucketName, prefix, suffix, events)\n    listener.start()\n\n    return listener\n  }\n\n  getBucketVersioning(bucketName,cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = \"versioning\"\n\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let versionConfig = Buffer.from('')\n      pipesetup(response, transformers.bucketVersioningTransformer())\n        .on('data', data => {\n          versionConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, versionConfig)\n        })\n    })\n  }\n\n  setBucketVersioning(bucketName,versionConfig, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!Object.keys(versionConfig).length){\n      throw new errors.InvalidArgumentError('versionConfig should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var method = 'PUT'\n    var query = \"versioning\"\n    var builder = new xml2js.Builder({rootName:'VersioningConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(versionConfig)\n\n    this.makeRequest({method, bucketName, query}, payload, 200, '', false, cb)\n  }\n\n  /** To set Tags on a bucket or object based on the params\n     *  __Arguments__\n     * taggingParams _object_ Which contains the following properties\n     *  bucketName _string_,\n     *  objectName _string_ (Optional),\n     *  tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n     *  putOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n     *  cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n     */\n  setTagging(taggingParams){\n\n    const { bucketName, objectName, tags, putOpts={}, cb} = taggingParams\n    const method = 'PUT'\n    let query =\"tagging\"\n\n    if(putOpts && putOpts.versionId){\n      query =`${query}&versionId=${putOpts.versionId}`\n    }\n    const tagsList=[]\n    for (const [key, value] of Object.entries(tags)) {\n      tagsList.push( { Key: key, Value: value} )\n    }\n    const taggingConfig = {\n      Tagging: {\n        TagSet: {\n          Tag: tagsList\n        }\n      }\n    }\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ headless:true,renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(taggingConfig)\n    payload = encoder.encode(payload)\n      \n    const requestOptions = { method, bucketName, query, headers }\n\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, 200, '', false, cb)\n\n  }\n\n  /** Set Tags on a Bucket\n   * __Arguments__\n   * bucketName _string_\n   * tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setBucketTagging(bucketName,tags,cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!isObject(tags)){\n      throw new errors.InvalidArgumentError('tags should be of type \"object\"')\n    }\n    if(Object.keys(tags).length > 10){\n      throw new errors.InvalidArgumentError('maximum tags allowed is 10\"')\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    return this.setTagging({bucketName, tags, cb})\n  }\n\n  /** Set Tags on an Object\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_\n   *  * tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n   *  putOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setObjectTagging(bucketName, objectName, tags, putOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n\n    if(isFunction(putOpts)){\n      cb=putOpts\n      putOpts={}\n    }\n\n    if(!isObject(tags)){\n      throw new errors.InvalidArgumentError('tags should be of type \"object\"')\n    }\n    if(Object.keys(tags).length > 10){\n      throw new errors.InvalidArgumentError('Maximum tags allowed is 10\"')\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    return this.setTagging({bucketName, objectName, tags, putOpts, cb})\n  }\n\n  /** Remove Tags on an Bucket/Object based on params\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_ (optional)\n   * removeOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeTagging({bucketName, objectName, removeOpts, cb}){\n    const method = 'DELETE'\n    let query =\"tagging\"\n\n    if(removeOpts && Object.keys(removeOpts).length && removeOpts.versionId){\n      query =`${query}&versionId=${removeOpts.versionId}`\n    }\n    const requestOptions = { method, bucketName, objectName, query }\n\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n    // FIXME: This is a hack and it will be updated when server side is fixed to send the correct '204' status code\n    this.makeRequest(requestOptions, '', 200, '', true, cb)\n  }\n\n  /** Remove Tags associated with a bucket\n   *  __Arguments__\n   * bucketName _string_\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeBucketTagging(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    return this.removeTagging({bucketName, cb})\n  }\n\n  /** Remove tags associated with an object\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_\n   * removeOpts _object_ (Optional) e.g. {VersionID:\"my-object-version-id\"}\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeObjectTagging(bucketName, objectName, removeOpts, cb){\n\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n    if(isFunction(removeOpts)){\n      cb=removeOpts\n      removeOpts={}\n    }\n    if(removeOpts && Object.keys(removeOpts).length && !isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    return this.removeTagging({bucketName, objectName, removeOpts, cb})\n  }\n\n  /** Get Tags associated with a Bucket\n   *  __Arguments__\n   * bucketName _string_\n   * `cb(error, tags)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  getBucketTagging(bucketName, cb){\n    const method = 'GET'\n    const query =\"tagging\"\n    const requestOptions = { method, bucketName, query }\n\n    this.makeRequest(requestOptions, '', 200, '', true, (e, response) => {\n      var transformer = transformers.getTagsTransformer()\n      if (e) return cb(e)\n      let tagsList\n      pipesetup(response, transformer)\n        .on('data', result => tagsList = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, tagsList))\n    })\n  }\n\n  /** Get the tags associated with a bucket OR an object\n   * bucketName _string_\n   * objectName _string_ (Optional)\n   * getOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"}\n   * `cb(error, tags)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  getObjectTagging(bucketName, objectName, getOpts={}, cb=()=>false){\n    const method = 'GET'\n    let query =\"tagging\"\n\n    if(!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n    if(isFunction(getOpts)){\n      cb=getOpts\n      getOpts={}\n    }\n    if(!isObject(getOpts)){\n      throw new errors.InvalidArgumentError('getOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if(getOpts && getOpts.versionId){\n      query =`${query}&versionId=${getOpts.versionId}`\n    }\n    const requestOptions = { method, bucketName, query }\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n\n    this.makeRequest(requestOptions, '', 200, '', true, (e, response) => {\n      const transformer = transformers.getTagsTransformer()\n      if (e) return cb(e)\n      let tagsList\n      pipesetup(response, transformer)\n        .on('data', result => tagsList = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, tagsList))\n    })\n\n  }\n\n  /** Put lifecycle configuration on a bucket.\n  /** Apply lifecycle configuration on a bucket.\n   * bucketName _string_\n   * policyConfig _object_ a valid policy configuration object.\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  applyBucketLifecycle(bucketName, policyConfig, cb){\n    const method = 'PUT'\n    const query=\"lifecycle\"\n\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ rootName:'LifecycleConfiguration', headless:true, renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(policyConfig)\n    payload = encoder.encode(payload)\n    const requestOptions = { method, bucketName, query, headers }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, 200, '', false, cb)\n\n  }\n\n  /** Remove lifecycle configuration of a bucket.\n   * bucketName _string_\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeBucketLifecycle(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'DELETE'\n    const query=\"lifecycle\"\n    this.makeRequest({method, bucketName, query}, '', 204, '', false, cb)\n  }\n\n  /** Set/Override lifecycle configuration on a bucket. if the configuration is empty, it removes the configuration.\n   * bucketName _string_\n   * lifeCycleConfig _object_ one of the following values: (null or '') to remove the lifecycle configuration. or a valid lifecycle configuration\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setBucketLifecycle(bucketName, lifeCycleConfig=null, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(_.isEmpty(lifeCycleConfig)){\n      this.removeBucketLifecycle(bucketName, cb)\n    }else {\n      this.applyBucketLifecycle(bucketName, lifeCycleConfig, cb)\n    }\n  }\n\n  /** Get lifecycle configuration on a bucket.\n   * bucketName _string_\n   * `cb(config)` _function_ - callback function with lifecycle configuration as the error argument.\n   */\n  getBucketLifecycle(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'GET'\n    const query =\"lifecycle\"\n    const requestOptions = { method, bucketName, query }\n\n    this.makeRequest(requestOptions, '', 200, '', true, (e, response) => {\n      const transformer = transformers.lifecycleTransformer()\n      if (e) return cb(e)\n      let lifecycleConfig\n      pipesetup(response, transformer)\n        .on('data', result => lifecycleConfig = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, lifecycleConfig))\n    })\n\n  }\n\n  setObjectLockConfig(bucketName, lockConfigOpts={}, cb) {\n\n    const retentionModes = [RETENTION_MODES.COMPLIANCE, RETENTION_MODES.GOVERNANCE]\n    const validUnits = [RETENTION_VALIDITY_UNITS.DAYS, RETENTION_VALIDITY_UNITS.YEARS]\n\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if (lockConfigOpts.mode && !retentionModes.includes(lockConfigOpts.mode)) {\n      throw new TypeError(`lockConfigOpts.mode should be one of ${retentionModes}`)\n    }\n    if (lockConfigOpts.unit && !validUnits.includes(lockConfigOpts.unit)){\n      throw new TypeError(`lockConfigOpts.unit should be one of ${validUnits}`)\n    }\n    if (lockConfigOpts.validity && !isNumber(lockConfigOpts.validity)){\n      throw new TypeError(`lockConfigOpts.validity should be a number`)\n    }\n\n    const method = 'PUT'\n    const query = \"object-lock\"\n\n    let config={\n      ObjectLockEnabled:\"Enabled\"\n    }\n    const configKeys = Object.keys(lockConfigOpts)\n    //Check if keys are present and all keys are present.\n    if(configKeys.length > 0){\n      if(_.difference(configKeys, ['unit','mode','validity']).length !== 0){\n        throw new TypeError(`lockConfigOpts.mode,lockConfigOpts.unit,lockConfigOpts.validity all the properties should be specified.`)\n      } else {\n        config.Rule={\n          DefaultRetention:{}\n        }\n        if (lockConfigOpts.mode) {\n          config.Rule.DefaultRetention.Mode = lockConfigOpts.mode\n        }\n        if (lockConfigOpts.unit === RETENTION_VALIDITY_UNITS.DAYS) {\n          config.Rule.DefaultRetention.Days = lockConfigOpts.validity\n        } else if (lockConfigOpts.unit === RETENTION_VALIDITY_UNITS.YEARS) {\n          config.Rule.DefaultRetention.Years = lockConfigOpts.validity\n        }\n      }\n    }\n\n    const builder = new xml2js.Builder({rootName:'ObjectLockConfiguration', renderOpts:{'pretty':false}, headless:true})\n    const payload = builder.buildObject(config)\n\n    const headers = {}\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName, query, headers}, payload, 200, '', false, cb)\n  }\n\n  getObjectLockConfig(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"object-lock\"\n\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let objectLockConfig = Buffer.from('')\n      pipesetup(response, transformers.objectLockTransformer())\n        .on('data', data => {\n          objectLockConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, objectLockConfig)\n        })\n    })\n  }\n\n  putObjectRetention(bucketName, objectName, retentionOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(retentionOpts)) {\n      throw new errors.InvalidArgumentError('retentionOpts should be of type \"object\"')\n    } else {\n      if (retentionOpts.governanceBypass && !isBoolean(retentionOpts.governanceBypass)) {\n        throw new errors.InvalidArgumentError('Invalid value for governanceBypass',retentionOpts.governanceBypass)\n      }\n      if (retentionOpts.mode && ![RETENTION_MODES.COMPLIANCE,RETENTION_MODES.GOVERNANCE].includes((retentionOpts.mode))) {\n        throw new errors.InvalidArgumentError('Invalid object retention mode ', retentionOpts.mode)\n      }\n      if (retentionOpts.retainUntilDate && !isString(retentionOpts.retainUntilDate)) {\n        throw new errors.InvalidArgumentError('Invalid value for retainUntilDate',retentionOpts.retainUntilDate)\n      }\n      if (retentionOpts.versionId && !isString(retentionOpts.versionId)) {\n        throw new errors.InvalidArgumentError('Invalid value for versionId',retentionOpts.versionId)\n      }\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const method = 'PUT'\n    let query = \"retention\"\n\n    const headers = {}\n    if(retentionOpts.governanceBypass){\n      headers[\"X-Amz-Bypass-Governance-Retention\"]=true\n    }\n\n    const builder = new xml2js.Builder({rootName:'Retention', renderOpts:{'pretty':false}, headless:true})\n    const params ={}\n\n    if(retentionOpts.mode){\n      params.Mode =retentionOpts.mode\n    }\n    if(retentionOpts.retainUntilDate){\n      params.RetainUntilDate =retentionOpts.retainUntilDate\n    }\n    if(retentionOpts.versionId){\n      query += `&versionId=${retentionOpts.versionId}`\n    }\n\n    let payload = builder.buildObject(params)\n\n    headers['Content-MD5'] = toMd5(payload)\n\n    //FIXME minio Server returns 204 but AWS returns 200. So in aws, though the operation is success, error is thrown.\n    this.makeRequest({method, bucketName, objectName, query, headers}, payload, 204, '', false, cb)\n  }\n\n  getObjectRetention(bucketName ,objectName, getOpts, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if(!isObject(getOpts)){\n      throw new errors.InvalidArgumentError('callback should be of type \"object\"')\n    }else if(getOpts.versionId && !isString(getOpts.versionId)){\n      throw new errors.InvalidArgumentError('VersionID should be of type \"string\"')\n    }\n    if (cb && !isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    let query = \"retention\"\n    if(getOpts.versionId){\n      query += `&versionId=${getOpts.versionId}`\n    }\n\n    this.makeRequest({method, bucketName,objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let retentionConfig = Buffer.from('')\n      pipesetup(response, transformers.objectRetentionTransformer())\n        .on('data', data => {\n          retentionConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, retentionConfig)\n        })\n    })\n  }\n\n\n  setBucketEncryption(bucketName, encryptionConfig, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if(isFunction(encryptionConfig)){\n      cb= encryptionConfig\n      encryptionConfig = null\n    }\n\n    if(!_.isEmpty(encryptionConfig) && encryptionConfig.Rule.length >1){\n      throw new errors.InvalidArgumentError('Invalid Rule length. Only one rule is allowed.: ' + encryptionConfig.Rule)\n    }\n    if (cb && !isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let encryptionObj =encryptionConfig\n    if(_.isEmpty(encryptionConfig)) {\n      encryptionObj={\n      //Default UOS Server Supported Rule\n        Rule:[\n          {\n            ApplyServerSideEncryptionByDefault: {\n              SSEAlgorithm:\"AES256\"\n            }\n          }\n        ]\n\n      }}\n\n    let method = 'PUT'\n    let query = \"encryption\"\n    let builder = new xml2js.Builder({rootName:'ServerSideEncryptionConfiguration', renderOpts:{'pretty':false}, headless:true})\n    let payload = builder.buildObject(encryptionObj)\n\n    const headers = {}\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName, query,headers}, payload, 200, '', false, cb)\n  }\n\n  getBucketEncryption(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"encryption\"\n\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let bucketEncConfig = Buffer.from('')\n      pipesetup(response, transformers.bucketEncryptionTransformer())\n        .on('data', data => {\n          bucketEncConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, bucketEncConfig)\n        })\n    })\n  }\n  removeBucketEncryption(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const query = \"encryption\"\n\n    this.makeRequest({method, bucketName, query}, '', 204, '', false, cb)\n  }\n\n\n  setBucketReplication(bucketName, replicationConfig={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(replicationConfig)) {\n      throw new errors.InvalidArgumentError('replicationConfig should be of type \"object\"')\n    } else {\n      if (_.isEmpty(replicationConfig.role)) {\n        throw new errors.InvalidArgumentError('Role cannot be empty')\n      }else if (replicationConfig.role && !isString(replicationConfig.role)) {\n        throw new errors.InvalidArgumentError('Invalid value for role', replicationConfig.role)\n      }\n      if (_.isEmpty(replicationConfig.rules)) {\n        throw new errors.InvalidArgumentError('Minimum one replication rule must be specified')\n      }\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const method = 'PUT'\n    let query = \"replication\"\n    const headers = {}\n\n    const replicationParamsConfig = {\n      ReplicationConfiguration: {\n        Role: replicationConfig.role,\n        Rule: replicationConfig.rules\n      }\n    }\n\n    const builder =  new xml2js.Builder({ renderOpts:{'pretty':false},headless: true })\n\n    let payload = builder.buildObject(replicationParamsConfig)\n\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName,  query, headers}, payload, 200, '', false, cb)\n  }\n\n  getBucketReplication(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"replication\"\n\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let replicationConfig = Buffer.from('')\n      pipesetup(response, transformers.replicationConfigTransformer())\n        .on('data', data => {\n          replicationConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, replicationConfig)\n        })\n    })\n  }\n\n  removeBucketReplication(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'DELETE'\n    const query=\"replication\"\n    this.makeRequest({method, bucketName, query}, '', 200, '', false, cb)\n  }\n\n\n  getObjectLegalHold(bucketName, objectName, getOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if(isFunction(getOpts)){\n      cb= getOpts\n      getOpts = {}\n    }\n\n    if (!isObject(getOpts))  {\n      throw new TypeError('getOpts should be of type \"Object\"')\n    } else if(Object.keys(getOpts).length> 0 && getOpts.versionId && !isString((getOpts.versionId))){\n      throw new TypeError('versionId should be of type string.:',getOpts.versionId )\n    }\n\n\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    const method = 'GET'\n    let query = \"legal-hold\"\n\n    if (getOpts.versionId){\n      query +=`&versionId=${getOpts.versionId}`\n    }\n\n    this.makeRequest({method, bucketName, objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let legalHoldConfig = Buffer.from('')\n      pipesetup(response, transformers.objectLegalHoldTransformer())\n        .on('data', data => {\n          legalHoldConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, legalHoldConfig)\n        })\n    })\n\n  }\n\n  setObjectLegalHold(bucketName, objectName, setOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    const defaultOpts = {\n      status:LEGAL_HOLD_STATUS.ENABLED\n    }\n    if(isFunction(setOpts)){\n      cb= setOpts\n      setOpts =defaultOpts\n    }\n\n    if (!isObject(setOpts)) {\n      throw new TypeError('setOpts should be of type \"Object\"')\n    }else {\n\n      if(![LEGAL_HOLD_STATUS.ENABLED, LEGAL_HOLD_STATUS.DISABLED].includes((setOpts.status))){\n        throw new TypeError('Invalid status: '+setOpts.status )\n      }\n      if(setOpts.versionId && !setOpts.versionId.length){\n        throw new TypeError('versionId should be of type string.:'+ setOpts.versionId )\n      }\n    }\n\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    if( _.isEmpty(setOpts)){\n      setOpts={\n        defaultOpts\n      }\n    }\n\n    const method = 'PUT'\n    let query = \"legal-hold\"\n\n    if (setOpts.versionId){\n      query +=`&versionId=${setOpts.versionId}`\n    }\n\n    let config={\n      Status: setOpts.status\n    }\n\n    const builder = new xml2js.Builder({rootName:'LegalHold', renderOpts:{'pretty':false}, headless:true})\n    const payload = builder.buildObject(config)\n    const headers = {}\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest({method, bucketName, objectName, query, headers}, payload, 200, '', false, cb)\n\n\n  }\n\n  get extensions() {\n    if(!this.clientExtensions)\n    {\n      this.clientExtensions = new extensions(this)\n    }\n    return this.clientExtensions\n  }\n}\n\n// Promisify various public-facing APIs on the Client module.\nClient.prototype.makeBucket = promisify(Client.prototype.makeBucket)\nClient.prototype.listBuckets = promisify(Client.prototype.listBuckets)\nClient.prototype.bucketExists = promisify(Client.prototype.bucketExists)\nClient.prototype.removeBucket = promisify(Client.prototype.removeBucket)\n\nClient.prototype.getObject = promisify(Client.prototype.getObject)\nClient.prototype.getPartialObject = promisify(Client.prototype.getPartialObject)\nClient.prototype.fGetObject = promisify(Client.prototype.fGetObject)\nClient.prototype.putObject = promisify(Client.prototype.putObject)\nClient.prototype.fPutObject = promisify(Client.prototype.fPutObject)\nClient.prototype.copyObject = promisify(Client.prototype.copyObject)\nClient.prototype.statObject = promisify(Client.prototype.statObject)\nClient.prototype.removeObject = promisify(Client.prototype.removeObject)\nClient.prototype.removeObjects = promisify(Client.prototype.removeObjects)\n\nClient.prototype.presignedUrl = promisify(Client.prototype.presignedUrl)\nClient.prototype.presignedGetObject = promisify(Client.prototype.presignedGetObject)\nClient.prototype.presignedPutObject = promisify(Client.prototype.presignedPutObject)\nClient.prototype.presignedPostPolicy = promisify(Client.prototype.presignedPostPolicy)\nClient.prototype.getBucketNotification = promisify(Client.prototype.getBucketNotification)\nClient.prototype.setBucketNotification = promisify(Client.prototype.setBucketNotification)\nClient.prototype.removeAllBucketNotification = promisify(Client.prototype.removeAllBucketNotification)\nClient.prototype.getBucketPolicy = promisify(Client.prototype.getBucketPolicy)\nClient.prototype.setBucketPolicy = promisify(Client.prototype.setBucketPolicy)\nClient.prototype.removeIncompleteUpload = promisify(Client.prototype.removeIncompleteUpload)\nClient.prototype.getBucketVersioning = promisify(Client.prototype.getBucketVersioning)\nClient.prototype.setBucketVersioning=promisify(Client.prototype.setBucketVersioning)\nClient.prototype.setBucketTagging=promisify(Client.prototype.setBucketTagging)\nClient.prototype.removeBucketTagging=promisify(Client.prototype.removeBucketTagging)\nClient.prototype.getBucketTagging=promisify(Client.prototype.getBucketTagging)\nClient.prototype.setObjectTagging=promisify(Client.prototype.setObjectTagging)\nClient.prototype.removeObjectTagging=promisify(Client.prototype.removeObjectTagging)\nClient.prototype.getObjectTagging=promisify(Client.prototype.getObjectTagging)\nClient.prototype.setBucketLifecycle=promisify(Client.prototype.setBucketLifecycle)\nClient.prototype.getBucketLifecycle=promisify(Client.prototype.getBucketLifecycle)\nClient.prototype.removeBucketLifecycle=promisify(Client.prototype.removeBucketLifecycle)\nClient.prototype.setObjectLockConfig=promisify(Client.prototype.setObjectLockConfig)\nClient.prototype.getObjectLockConfig=promisify(Client.prototype.getObjectLockConfig)\nClient.prototype.putObjectRetention =promisify(Client.prototype.putObjectRetention)\nClient.prototype.getObjectRetention =promisify(Client.prototype.getObjectRetention)\nClient.prototype.setBucketEncryption = promisify(Client.prototype.setBucketEncryption)\nClient.prototype.getBucketEncryption = promisify(Client.prototype.getBucketEncryption)\nClient.prototype.removeBucketEncryption = promisify(Client.prototype.removeBucketEncryption)\nClient.prototype.setBucketReplication =promisify(Client.prototype.setBucketReplication)\nClient.prototype.getBucketReplication =promisify(Client.prototype.getBucketReplication)\nClient.prototype.removeBucketReplication=promisify(Client.prototype.removeBucketReplication)\nClient.prototype.setObjectLegalHold=promisify(Client.prototype.setObjectLegalHold)\nClient.prototype.getObjectLegalHold=promisify(Client.prototype.getObjectLegalHold)\n\nexport class CopyConditions {\n  constructor() {\n    this.modified = \"\"\n    this.unmodified = \"\"\n    this.matchETag = \"\"\n    this.matchETagExcept = \"\"\n  }\n\n  setModified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.modified = date.toUTCString()\n  }\n\n  setUnmodified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.unmodified = date.toUTCString()\n  }\n\n  setMatchETag(etag) {\n    this.matchETag = etag\n  }\n\n  setMatchETagExcept(etag) {\n    this.matchETagExcept = etag\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nexport class PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(date) {\n    if (!date) {\n      throw new errors.InvalidDateError('Invalid date : cannot be null')\n    }\n    this.policy.expiration = date.toISOString()\n  }\n\n  // set object name\n  setKey(objectName) {\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name : ${objectName}`)\n    }\n    this.policy.conditions.push(['eq', '$key', objectName])\n    this.formData.key = objectName\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    this.policy.conditions.push(['starts-with', '$key', prefix])\n    this.formData.key = prefix\n  }\n\n  // set bucket name\n  setBucket(bucketName) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    this.policy.conditions.push(['eq', '$bucket', bucketName])\n    this.formData.bucket = bucketName\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new Error('content-type cannot be null')\n    }\n    this.policy.conditions.push(['eq', '$Content-Type', type])\n    this.formData['Content-Type'] = type\n  }\n\n  // set minimum/maximum length of what Content-Length can be.\n  setContentLengthRange(min, max) {\n    if (min > max) {\n      throw new Error('min cannot be more than max')\n    }\n    if (min < 0) {\n      throw new Error('min should be > 0')\n    }\n    if (max < 0) {\n      throw new Error('max should be > 0')\n    }\n    this.policy.conditions.push(['content-length-range', min, max])\n  }\n}\n\nexport * from './notification'\n"],"file":"minio.js"}